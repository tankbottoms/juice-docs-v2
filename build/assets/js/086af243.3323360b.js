"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[82380],{3905:(t,e,l)=>{l.d(e,{Zo:()=>d,kt:()=>k});var n=l(67294);function a(t,e,l){return e in t?Object.defineProperty(t,e,{value:l,enumerable:!0,configurable:!0,writable:!0}):t[e]=l,t}function r(t,e){var l=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),l.push.apply(l,n)}return l}function i(t){for(var e=1;e<arguments.length;e++){var l=null!=arguments[e]?arguments[e]:{};e%2?r(Object(l),!0).forEach((function(e){a(t,e,l[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(l,e))}))}return t}function o(t,e){if(null==t)return{};var l,n,a=function(t,e){if(null==t)return{};var l,n,a={},r=Object.keys(t);for(n=0;n<r.length;n++)l=r[n],e.indexOf(l)>=0||(a[l]=t[l]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)l=r[n],e.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(t,l)&&(a[l]=t[l])}return a}var s=n.createContext({}),u=function(t){var e=n.useContext(s),l=e;return t&&(l="function"==typeof t?t(e):i(i({},e),t)),l},d=function(t){var e=u(t.components);return n.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var l=t.components,a=t.mdxType,r=t.originalType,s=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),c=u(l),k=a,m=c["".concat(s,".").concat(k)]||c[k]||p[k]||r;return l?n.createElement(m,i(i({ref:e},d),{},{components:l})):n.createElement(m,i({ref:e},d))}));function k(t,e){var l=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=l.length,i=new Array(r);i[0]=c;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:a,i[1]=o;for(var u=2;u<r;u++)i[u]=l[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,l)}c.displayName="MDXCreateElement"},31323:(t,e,l)=>{l.r(e),l.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var n=l(87462),a=(l(67294),l(3905));const r={},i="JBETHERC20SplitsPayer",o={unversionedId:"dev/api/contracts/or-utilities/jbetherc20splitspayer/README",id:"dev/api/contracts/or-utilities/jbetherc20splitspayer/README",title:"JBETHERC20SplitsPayer",description:"Sends ETH or ERC20's to a group of splits as it receives direct payments or has its functions called.",source:"@site/docs/dev/api/contracts/or-utilities/jbetherc20splitspayer/README.md",sourceDirName:"dev/api/contracts/or-utilities/jbetherc20splitspayer",slug:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/",permalink:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/api/contracts/or-utilities/jbetherc20splitspayer/README.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"deployProjectPayer",permalink:"/dev/api/contracts/or-utilities/jbetherc20projectpayerdeployer/write/deployprojectpayer"},next:{title:"AddToBalance",permalink:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/events/addtobalance"}},s={},u=[{value:"Code",id:"code",level:4},{value:"Addresses",id:"addresses",level:4},{value:"Interfaces",id:"interfaces",level:4},{value:"Inheritance",id:"inheritance",level:4},{value:"Constructor",id:"constructor",level:4},{value:"Events",id:"events",level:4},{value:"Properties",id:"properties",level:4},{value:"Read",id:"read",level:4},{value:"Write",id:"write",level:4}],d={toc:u};function p(t){let{components:e,...l}=t;return(0,a.kt)("wrapper",(0,n.Z)({},d,l,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"jbetherc20splitspayer"},"JBETHERC20SplitsPayer"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Sends ETH or ERC20's to a group of splits as it receives direct payments or has its functions called.")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Inherit from this contract or borrow from its logic to forward ETH or ERC20's to a group of splits from within other contracts.")),(0,a.kt)("h4",{id:"code"},"Code"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/jbx-protocol/juice-contracts-v2/blob/main/contracts/JBETHERC20SplitsPayer.sol"},"https://github.com/jbx-protocol/juice-contracts-v2/blob/main/contracts/JBETHERC20SplitsPayer.sol")),(0,a.kt)("h4",{id:"addresses"},"Addresses"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"There can be several instances of this contract deployed.")),(0,a.kt)("h4",{id:"interfaces"},"Interfaces"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/interfaces/ijbsplitspayer"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"IJBSplitsPayer")))),(0,a.kt)("td",{parentName:"tr",align:null},"General interface for the methods in this contract that interact with the blockchain's state according to the protocol's rules.")))),(0,a.kt)("h4",{id:"inheritance"},"Inheritance"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Contract"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20projectpayer"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"JBETHERC20ProjectPayer")))),(0,a.kt)("td",{parentName:"tr",align:null},"Sends ETH or ERC20's to a project treasury as it receives direct payments or has it's functions called.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://docs.openzeppelin.com/contracts/4.x/api/security#ReentrancyGuard"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"ReentrancyGuard")))),(0,a.kt)("td",{parentName:"tr",align:null},"Contract module that helps prevent reentrant calls to a function.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://docs.openzeppelin.com/contracts/4.x/api/utils#ERC165"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"ERC165")))),(0,a.kt)("td",{parentName:"tr",align:null},"Introspection on interface adherance.")))),(0,a.kt)("h4",{id:"constructor"},"Constructor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/** \n  @param _defaultSplitsProjectId The ID of project for which the default splits are stored.\n  @param _defaultSplitsDomain The splits domain to payout when this contract receives direct payments.\n  @param _defaultSplitsGroup The splits group to payout when this contract receives direct payments.\n  @param _splitsStore A contract that stores splits for each project.\n  @param _defaultProjectId The ID of the project whose treasury should be forwarded the splits payer contract's received payment leftovers after distributing to the default splits group.\n  @param _defaultBeneficiary The address that'll receive the project's tokens. \n  @param _defaultPreferClaimedTokens A flag indicating whether issued tokens should be automatically claimed into the beneficiary's wallet. \n  @param _defaultMemo A memo to pass along to the emitted event, and passed along the the funding cycle's data source and delegate.  A data source can alter the memo before emitting in the event and forwarding to the delegate.\n  @param _defaultMetadata Bytes to send along to the project's data source and delegate, if provided.\n  @param _preferAddToBalance  A flag indicating if received payments should call the `pay` function or the `addToBalance` function of a project.\n  @param _owner The address that will own the contract.\n*/\nconstructor(\n  uint256 _defaultSplitsProjectId,\n  uint256 _defaultSplitsDomain,\n  uint256 _defaultSplitsGroup,\n  IJBSplitsStore _splitsStore,\n  uint256 _defaultProjectId,\n  address payable _defaultBeneficiary,\n  bool _defaultPreferClaimedTokens,\n  string memory _defaultMemo,\n  bytes memory _defaultMetadata,\n  bool _preferAddToBalance,\n  address _owner\n)\n  JBETHERC20ProjectPayer(\n    _defaultProjectId,\n    _defaultBeneficiary,\n    _defaultPreferClaimedTokens,\n    _defaultMemo,\n    _defaultMetadata,\n    _preferAddToBalance,\n    _splitsStore.directory(),\n    _owner\n  )\n{\n  defaultSplitsProjectId = _defaultSplitsProjectId;\n  defaultSplitsDomain = _defaultSplitsDomain;\n  defaultSplitsGroup = _defaultSplitsGroup;\n  splitsStore = _splitsStore;\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_defaultSplitsProjectId")," is the ID of project for which the default splits are stored."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_defaultSplitsDomain")," is the splits domain to payout when this contract receives direct payments."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_defaultSplitsGroup")," is the splits group to payout when this contract receives direct payments."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_splitsStore")," is a contract that stores splits for each project."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_defaultProjectId")," is the ID of the project whose treasury should be forwarded the splits payer contract's received payment leftovers after distributing to the default splits group."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_defaultBeneficiary")," is the address that'll receive the project's tokens. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_defaultPreferClaimedTokens")," is a flag indicating whether issued tokens should be automatically claimed into the beneficiary's wallet. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_defaultMemo")," is a memo to pass along to the emitted event, and passed along the the funding cycle's data source and delegate.  A data source can alter the memo before emitting in the event and forwarding to the delegate."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_defaultMetadata")," are bytes to send along to the project's data source and delegate, if provided."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_defaultPreferAddToBalance")," is a flag indicating if received payments should call the ",(0,a.kt)("inlineCode",{parentName:"li"},"pay")," function or the ",(0,a.kt)("inlineCode",{parentName:"li"},"addToBalance")," function of a project."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_owner")," is the address that will own the contract.")),(0,a.kt)("h4",{id:"events"},"Events"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Data"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/events/setdefaultsplits"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"SetDefaultSplits")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 indexed projectId")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 indexed domain")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 indexed group")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address caller"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/events/pay"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"Pay")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 indexed projectId")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address beneficiary")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address token")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 amount")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 decimals")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 leftoverAmount")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 minReturnedTokens")),(0,a.kt)("li",null,(0,a.kt)("code",null,"bool preferClaimedTokens")),(0,a.kt)("li",null,(0,a.kt)("code",null,"string memo")),(0,a.kt)("li",null,(0,a.kt)("code",null,"bytes metadata")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address caller"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/events/addtobalance"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"AddToBalance")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 indexed projectId")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address beneficiary")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address token")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 amount")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 decimals")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 leftoverAmount")),(0,a.kt)("li",null,(0,a.kt)("code",null,"string memo")),(0,a.kt)("li",null,(0,a.kt)("code",null,"bytes metadata")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address caller"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/events/distributetosplitgroup"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"DistributeToSplitGroup")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 indexed projectId")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 indexed domain")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 indexed group")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address caller"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/events/distributetosplit"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"DistributeToSplit")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,(0,a.kt)("a",{parentName:"td",href:"/dev/api/data-structures/jbsplit"},"JBSplit")," split")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 amount")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address caller"))))))),(0,a.kt)("h4",{id:"properties"},"Properties"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/properties/splitsstore"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"splitsStore")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("strong",null,"Returns")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/jbsplitsstore"},"JBSplitsStore")))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/properties/defaultsplitsprojectid"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultSplitsProjectId")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("strong",null,"Returns")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/properties/defaultsplitsdomain"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultSplitsDomain")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("strong",null,"Returns")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/properties/defaultsplitsgroup"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"defaultSplitsGroup")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("strong",null,"Returns")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256"))))))),(0,a.kt)("h4",{id:"read"},"Read"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Function"),(0,a.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/read/supportsinterface"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"supportsInterface")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("strong",null,"Params")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _interfaceId"))),(0,a.kt)("p",null,(0,a.kt)("strong",null,"Returns")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"bool"))))))),(0,a.kt)("h4",{id:"write"},"Write"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Function"),(0,a.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/write/pay"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"receive")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("strong",null,"Traits")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"payable")),(0,a.kt)("li",null,(0,a.kt)("code",null,"virtual"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/write/setdefaultsplits"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"setDefaultSplits")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("strong",null,"Traits")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,(0,a.kt)("a",{parentName:"td",href:"https://docs.openzeppelin.com/contracts/4.x/api/access#Ownable-onlyOwner--"},"onlyOwner"))),(0,a.kt)("li",null,(0,a.kt)("code",null,"virtual"))),(0,a.kt)("p",null,(0,a.kt)("strong",null,"Params")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _projectId")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _domain")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _group"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/write/pay"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"pay")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("strong",null,"Traits")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"payable")),(0,a.kt)("li",null,(0,a.kt)("code",null,"virtual"))),(0,a.kt)("p",null,(0,a.kt)("strong",null,"Params")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _projectId")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address _token")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _amount")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _decimals")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address _beneficiary")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _minReturnedTokens")),(0,a.kt)("li",null,(0,a.kt)("code",null,"bool _preferClaimedTokens")),(0,a.kt)("li",null,(0,a.kt)("code",null,"string _memo")),(0,a.kt)("li",null,(0,a.kt)("code",null,"bytes _metadata"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/write/addtobalanceof"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"addToBalanceOf")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("strong",null,"Traits")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"payable")),(0,a.kt)("li",null,(0,a.kt)("code",null,"virtual"))),(0,a.kt)("p",null,(0,a.kt)("strong",null,"Params")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _projectId")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address _token")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _amount")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _decimals")),(0,a.kt)("li",null,(0,a.kt)("code",null,"string _memo")),(0,a.kt)("li",null,(0,a.kt)("code",null,"bytes _metadata"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer/write/-_paytosplits"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"_payToSplits")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("strong",null,"Traits")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"internal")),(0,a.kt)("li",null,(0,a.kt)("code",null,"virtual"))),(0,a.kt)("p",null,(0,a.kt)("strong",null,"Params")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _splitsProjectId")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _splitsDomain")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _splitsGroup")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address _token")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _amount")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _decimals"))))))))}p.isMDXComponent=!0}}]);