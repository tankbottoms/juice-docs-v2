"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[99030],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>d});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(o),d=n,f=p["".concat(l,".").concat(d)]||p[d]||h[d]||i;return o?r.createElement(f,a(a({ref:t},u),{},{components:o})):r.createElement(f,a({ref:t},u))}));function d(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,a=new Array(i);a[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,a[1]=s;for(var c=2;c<i;c++)a[c]=o[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}p.displayName="MDXCreateElement"},87495:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=o(87462),n=(o(67294),o(3905));const i={slug:"overflow",title:"Overflow: A mechanism to refund, ragequit, give cash-back, or offer realizable profits.",authors:["jango"],tags:["guide"]},a=void 0,s={permalink:"/blog/overflow",editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/blog/2021-11-16-overflow.md",source:"@site/blog/2021-11-16-overflow.md",title:"Overflow: A mechanism to refund, ragequit, give cash-back, or offer realizable profits.",description:"A project's overflowed funds in the Juicebox protocol can serve various purposes depending on the configuration choices the project makes.",date:"2021-11-16T00:00:00.000Z",formattedDate:"November 16, 2021",tags:[{label:"guide",permalink:"/blog/tags/guide"}],readingTime:3.815,hasTruncateMarker:!1,authors:[{name:"Jango",title:"JuiceboxDAO Contributor",url:"https://twitter.com/me_jango",imageURL:"https://pbs.twimg.com/profile_images/1414958948189413395/l89bNR2m_400x400.jpg",key:"jango"}],frontMatter:{slug:"overflow",title:"Overflow: A mechanism to refund, ragequit, give cash-back, or offer realizable profits.",authors:["jango"],tags:["guide"]},prevItem:{title:"Potential ways to handle the ConstitutionDAO refund",permalink:"/blog/constitutiondao-refund-brainstorm"},nextItem:{title:"Current state of JuiceboxDAO membership",permalink:"/blog/current-state-of-juiceboxdao-membership"}},l={authorsImageUrls:[void 0]},c=[{value:"Refund",id:"refund",level:3},{value:"Ragequit",id:"ragequit",level:3},{value:"Cash-back",id:"cash-back",level:3},{value:"Realizable profits",id:"realizable-profits",level:3}],u={toc:c};function h(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A project's overflowed funds in the Juicebox protocol can serve various purposes depending on the configuration choices the project makes. "),(0,n.kt)("p",null,"A reminder, overflow is the amount of funds currently in a project's Juicebox treasury minus its current funding cycle's ",(0,n.kt)("inlineCode",{parentName:"p"},"target"),", which specifies the amount allowed to be distributed from the treasury to preprogrammed addresses during the cycle. A project's token holders can burn their tokens at any point to receive a proportional amount of the project's overflow. This proportion can be affected by a ",(0,n.kt)("inlineCode",{parentName:"p"},"bondingCurve")," also configured per funding cycle. A curve of 100% is a linear proportion."),(0,n.kt)("p",null,"Here are outlines of how a project's funding cycles might be configured to use its overflow for achieving various treasury designs:"),(0,n.kt)("h3",{id:"refund"},"Refund"),(0,n.kt)("p",null,"Overflow can be used to give all contributors access to their money back in the case of an unsuccessful campaign. "),(0,n.kt)("p",null,"In the case of ConstitutionDAO, the project's first funding cycle is configured with a ",(0,n.kt)("inlineCode",{parentName:"p"},"target")," of ",(0,n.kt)("inlineCode",{parentName:"p"},"uint256.max"),", which allows free movement of any funds accumulated in Juicebox into preprogrammed addresses (the Gnosis multisig wallet). It is also set up with a ",(0,n.kt)("inlineCode",{parentName:"p"},"duration")," of 0, which gives the project's owner (also the Gnosis multisig wallet) authority to trigger a new reconfigured funding cycle at any point. All ETH contributed mints a proportional amount of the project's tokens for the contributor."),(0,n.kt)("p",null,"The multisig could thus reconfigure the project to have a ",(0,n.kt)("inlineCode",{parentName:"p"},"target")," of 0 and then inject all of its raised funds back into its Juicebox treasury, which would make all funds in the project considered overflow and therefor claimable by token holders. With the ",(0,n.kt)("inlineCode",{parentName:"p"},"bondingCurve")," at 100%, each token holder could then burn their supply to receive the same amount of ETH they originally put in."),(0,n.kt)("h3",{id:"ragequit"},"Ragequit"),(0,n.kt)("p",null,"A project can use its overflow to allow disenchanted token holders to exit and take with them a portion of the treasury's funds."),(0,n.kt)("p",null,"Only a project's overflowed funds in Juicebox are available to be claimed by burning tokens. If a project's funds are mostly kept in a multisig (or other contracts/assets), they cannot not be taken into account in the redemption value of a token (changing in V2). A project can thus tune the expected return of ragequitting by injecting liquid funds back into Juicebox, adjusting its ",(0,n.kt)("inlineCode",{parentName:"p"},"target")," value, and loosing/tightening its bonding curve."),(0,n.kt)("p",null,"If a project is spending its raised funds at a faster rate than it is pulling in funds, or if the project's rate of token distribution has changed over time, it's likely ragequitting via the built in juicebox mechanism won't yield the same amount as initially contributed."),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},'Shouts to MolochDAO for coining the term "ragequit".')),(0,n.kt)("h3",{id:"cash-back"},"Cash-back"),(0,n.kt)("p",null,"A project that sells products can use its overflow to give customers the opportunity for cash-back. "),(0,n.kt)("p",null,"TileDAO, for example, currently sells artwork for 0.16 ETH. When works are minted, the sale price is piped into the TileDAO treasury, minting the project's tokens for the buyer in return. TileDAO might want to give its token holders incentive to hold these tokens by giving them utility, perhaps decision making weight in governance, otherwise holders might want to redeem them for some of the project's treasury. This redemption would essentially give the buyer of the art some cash back, the value of which determined by several aspects of the project's funding cycle choices over time."),(0,n.kt)("h3",{id:"realizable-profits"},"Realizable profits"),(0,n.kt)("p",null,"A project can inject funds into its treasury from arbitrary sources, giving all token holders access to them by burning tokens. "),(0,n.kt)("p",null,"The simplest example here would be a project that gathers funds via a Juicebox project to purchase a thing, then turns around and sells the thing for more than what it paid. The funds from the sale can then be injected back into the Juicebox project for token holders to claim if they choose to do so."),(0,n.kt)("hr",null),(0,n.kt)("p",null,"Consistent through all of these examples are consequential choices that a project can make to offer its community particular treasury designs over time. The address that controls the NFT representing a Juicebox project has the power to make these choices. Whichever EOA or contract stewarding this responsibility on a community's behalf should be scrutinized and held accountable to the extent each community sees fit. "),(0,n.kt)("p",null,"Hopefully what these examples make clear is that the tokens issued by projects using the Juicebox protocol have no intrinsic value. They can, however, be used by projects as a utility for making decisions, the outcomes of which can give them value. It all depends on the choices we make together over time, and the social and algorithmic contracts we use to make these choices binding."))}h.isMDXComponent=!0}}]);