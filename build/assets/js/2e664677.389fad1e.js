"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[27161],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,u=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),s=l(t),f=o,g=s["".concat(u,".").concat(f)]||s[f]||p[f]||c;return t?r.createElement(g,i(i({ref:n},d),{},{components:t})):r.createElement(g,i({ref:n},d))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,i=new Array(c);i[0]=s;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var l=2;l<c;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},72602:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var r=t(87462),o=(t(67294),t(3905));const c={},i="Funding Cycles",a={unversionedId:"dev/protocol-v1/ticketbooth/funding-cycles",id:"dev/protocol-v1/ticketbooth/funding-cycles",title:"Funding Cycles",description:"Constructor",source:"@site/docs/dev/protocol-v1/ticketbooth/funding-cycles.md",sourceDirName:"dev/protocol-v1/ticketbooth",slug:"/dev/protocol-v1/ticketbooth/funding-cycles",permalink:"/dev/protocol-v1/ticketbooth/funding-cycles",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/protocol-v1/ticketbooth/funding-cycles.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"DirectPaymentAddress",permalink:"/dev/protocol-v1/ticketbooth/directpaymentaddress"},next:{title:"Governance",permalink:"/dev/protocol-v1/ticketbooth/governance"}},u={},l=[{value:"Constructor",id:"constructor",level:3},{value:"Read",id:"read",level:3},{value:"Write",id:"write",level:3}],d={toc:l};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"funding-cycles"},"Funding Cycles"),(0,o.kt)("h3",{id:"constructor"},"Constructor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"/** \n  @param _terminalDirectory A directory of a project's current Juicebox terminal to receive payments in.\n*/\nconstructor(ITerminalDirectory _terminalDirectory)\n    TerminalUtility(_terminalDirectory)\n")),(0,o.kt)("h3",{id:"read"},"Read"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n    @notice \n    Get the funding cycle with the given ID.\n\n    @param _fundingCycleId The ID of the funding cycle to get.\n\n    @return _fundingCycle The funding cycle.\n*/\nfunction get(uint256 _fundingCycleId)\n    external\n    view\n    override\n    returns (FundingCycle memory)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n    @notice \n    The funding cycle that's next up for a project, and therefor not currently accepting payments.\n\n    @dev \n    This runs roughly similar logic to `_configurable`.\n\n    @param _projectId The ID of the project being looked through.\n\n    @return _fundingCycle The queued funding cycle.\n*/\nfunction queuedOf(uint256 _projectId)\n    external\n    view\n    override\n    returns (FundingCycle memory)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n    @notice \n    The funding cycle that is currently active for the specified project.\n\n    @dev \n    This runs very similar logic to `_tappable`.\n\n    @param _projectId The ID of the project being looked through.\n\n    @return fundingCycle The current funding cycle.\n*/\nfunction currentOf(uint256 _projectId)\n    external\n    view\n    override\n    returns (FundingCycle memory fundingCycle)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"/** \n  @notice \n  The current ballot state of the project.\n\n  @param _projectId The ID of the project to check for a pending reconfiguration.\n\n  @return The current ballot's state.\n*/\nfunction currentBallotStateOf(uint256 _projectId)\n    external\n    view\n    override\n    returns (BallotState)\n")),(0,o.kt)("h3",{id:"write"},"Write"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n    @notice \n    Configures the next eligible funding cycle for the specified project.\n\n    @dev\n    Only a project's current terminal can configure its funding cycles.\n\n    @param _projectId The ID of the project being reconfigured.\n    @param _properties The funding cycle configuration.\n      @dev _properties.target The amount that the project wants to receive in each funding cycle. 18 decimals.\n      @dev _properties.currency The currency of the `_target`. Send 0 for ETH or 1 for USD.\n      @dev _properties.duration The duration of the funding cycle for which the `_target` amount is needed. Measured in days. \n        Set to 0 for no expiry and to be able to reconfigure anytime.\n      @dev _cycleLimit The number of cycles that this configuration should last for before going back to the last permanent. This does nothing for a project's first funding cycle.\n      @dev _properties.discountRate A number from 0-200 indicating how valuable a contribution to this funding cycle is compared to previous funding cycles.\n        If it's 0, each funding cycle will have equal weight.\n        If the number is 100, a contribution to the next funding cycle will only give you 90% of tickets given to a contribution of the same amount during the current funding cycle.\n        If the number is 200, a contribution to the next funding cycle will only give you 80% of tickets given to a contribution of the same amoutn during the current funding cycle.\n        If the number is 201, an non-recurring funding cycle will get made.\n      @dev _ballot The new ballot that will be used to approve subsequent reconfigurations.\n    @param _metadata Data to associate with this funding cycle configuration.\n    @param _fee The fee that this configuration will incure when tapping.\n    @param _configureActiveFundingCycle If a funding cycle that has already started should be configurable.\n\n    @return fundingCycle The funding cycle that the configuration will take effect during.\n*/\nfunction configure(\n    uint256 _projectId,\n    FundingCycleProperties calldata _properties,\n    uint256 _metadata,\n    uint256 _fee,\n    bool _configureActiveFundingCycle\n)\n    external\n    override\n    onlyTerminal(_projectId)\n    returns (FundingCycle memory fundingCycle)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"/** \n  @notice \n  Tap funds from a project's currently tappable funding cycle.\n\n  @dev\n  Only a project's current terminal can tap funds for its funding cycles.\n\n  @param _projectId The ID of the project being tapped.\n  @param _amount The amount being tapped.\n\n  @return fundingCycle The tapped funding cycle.\n*/\nfunction tap(uint256 _projectId, uint256 _amount)\n    external\n    override\n    onlyTerminal(_projectId)\n    returns (FundingCycle memory fundingCycle)\n")))}p.isMDXComponent=!0}}]);