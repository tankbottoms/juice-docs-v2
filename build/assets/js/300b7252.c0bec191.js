"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[73476],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var r=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,l=e.mdxType,n=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=s(a),m=l,f=c["".concat(p,".").concat(m)]||c[m]||u[m]||n;return a?r.createElement(f,i(i({ref:t},d),{},{components:a})):r.createElement(f,i({ref:t},d))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=a.length,i=new Array(n);i[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var s=2;s<n;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(67294),l=a(86010);const n="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,l.Z)(n,i),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>m});var r=a(87462),l=a(67294),n=a(86010),i=a(72389),o=a(67392),p=a(7094),s=a(12466);const d="tabList__CuJ",u="tabItem_LNqP";function c(e){var t,a;const{lazy:i,block:c,defaultValue:m,values:f,groupId:y,className:h}=e,k=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:k.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),v=(0,o.l)(b,((e,t)=>e.value===t.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const N=null===m?m:null!=(t=null!=m?m:null==(a=k.find((e=>e.props.default)))?void 0:a.props.value)?t:k[0].props.value;if(null!==N&&!b.some((e=>e.value===N)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:_,setTabGroupChoices:g}=(0,p.U)(),[P,w]=(0,l.useState)(N),j=[],{blockElementScrollPositionUntilNextRender:S}=(0,s.o5)();if(null!=y){const e=_[y];null!=e&&e!==P&&b.some((t=>t.value===e))&&w(e)}const T=e=>{const t=e.currentTarget,a=j.indexOf(t),r=b[a].value;r!==P&&(S(t),w(r),null!=y&&g(y,String(r)))},C=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var r;const t=j.indexOf(e.currentTarget)+1;a=null!=(r=j[t])?r:j[0];break}case"ArrowLeft":{var l;const t=j.indexOf(e.currentTarget)-1;a=null!=(l=j[t])?l:j[j.length-1];break}}null==(t=a)||t.focus()};return l.createElement("div",{className:(0,n.Z)("tabs-container",d)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":c},h)},b.map((e=>{let{value:t,label:a,attributes:i}=e;return l.createElement("li",(0,r.Z)({role:"tab",tabIndex:P===t?0:-1,"aria-selected":P===t,key:t,ref:e=>j.push(e),onKeyDown:C,onFocus:T,onClick:T},i,{className:(0,n.Z)("tabs__item",u,null==i?void 0:i.className,{"tabs__item--active":P===t})}),null!=a?a:t)}))),i?(0,l.cloneElement)(k.filter((e=>e.props.value===P))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==P})))))}function m(e){const t=(0,i.Z)();return l.createElement(c,(0,r.Z)({key:String(t)},e))}},94322:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=a(87462),l=(a(67294),a(3905)),n=a(65488),i=a(85162);const o={},p="deploySplitsPayer",s={unversionedId:"dev/api/contracts/or-utilities/jbetherc20splitspayerdeployer/write/deploysplitspayer",id:"dev/api/contracts/or-utilities/jbetherc20splitspayerdeployer/write/deploysplitspayer",title:"deploySplitsPayer",description:"Contract: JBETHERC20SplitsPayerDeployer",source:"@site/docs/dev/api/contracts/or-utilities/jbetherc20splitspayerdeployer/write/deploysplitspayer.md",sourceDirName:"dev/api/contracts/or-utilities/jbetherc20splitspayerdeployer/write",slug:"/dev/api/contracts/or-utilities/jbetherc20splitspayerdeployer/write/deploysplitspayer",permalink:"/dev/api/contracts/or-utilities/jbetherc20splitspayerdeployer/write/deploysplitspayer",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/api/contracts/or-utilities/jbetherc20splitspayerdeployer/write/deploysplitspayer.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"DeployProjectPayer",permalink:"/dev/api/contracts/or-utilities/jbetherc20splitspayerdeployer/events/deploysplitspayer"},next:{title:"JBProjectHandles",permalink:"/dev/api/contracts/or-utilities/jbprojecthandles/"}},d={},u=[{value:"Definition",id:"definition",level:4},{value:"Body",id:"body",level:4}],c={toc:u};function m(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"deploysplitspayer"},"deploySplitsPayer"),(0,l.kt)("p",null,"Contract: ",(0,l.kt)("a",{parentName:"p",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayerdeployer/"},(0,l.kt)("inlineCode",{parentName:"a"},"JBETHERC20SplitsPayerDeployer"))),(0,l.kt)("p",null,"Interface: ",(0,l.kt)("a",{parentName:"p",href:"/dev/api/interfaces/ijbetherc20splitspayerdeployer"},(0,l.kt)("inlineCode",{parentName:"a"},"IJBETHERC20SplitsPayerDeployer"))),(0,l.kt)(n.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"Step by step",label:"Step by step",mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Allows anyone to deploy a new splits payer contract.")),(0,l.kt)("h4",{id:"definition"},"Definition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function deploySplitsPayer(\n  uint256 _defaultSplitsProjectId,\n  uint256 _defaultSplitsDomain,\n  uint256 _defaultSplitsGroup,\n  IJBSplitsStore _splitsStore,\n  uint256 _defaultProjectId,\n  address payable _defaultBeneficiary,\n  bool _defaultPreferClaimedTokens,\n  string memory _defaultMemo,\n  bytes memory _defaultMetadata,\n  bool _defaultPreferAddToBalance,\n  address _owner\n) external override returns (IJBSplitsPayer splitsPayer) { ... }\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Arguments:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultSplitsProjectId")," is the ID of project for which the default splits are stored."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultSplitsDomain")," is the splits domain to payout when this contract receives direct payments."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultSplitsGroup")," is the splits group to payout when this contract receives direct payments."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_splitsStore")," is a contract that stores splits for each project."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultProjectId")," is the ID of the project whose treasury should be forwarded the splits payer contract's received payment leftovers after distributing to the default splits group."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultBeneficiary")," is the address that'll receive the project's tokens when the project payer receives payments. "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultPreferClaimedTokens")," is a flag indicating whether issued tokens from the project payer's received payments should be automatically claimed into the beneficiary's wallet. "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultMemo")," is the memo that'll be forwarded with the project payer's received payments. "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultMetadata")," is the metadata that'll be forwarded with the project payer's received payments. "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultPreferAddToBalance")," is a flag indicating if received payments should call the ",(0,l.kt)("inlineCode",{parentName:"li"},"pay")," function or the ",(0,l.kt)("inlineCode",{parentName:"li"},"addToBalance")," function of a project."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_owner")," is the address that will own the project payer."))),(0,l.kt)("li",{parentName:"ul"},"The function can be accessed externally by anyone."),(0,l.kt)("li",{parentName:"ul"},"The function overrides a function definition from the",(0,l.kt)("a",{parentName:"li",href:"/dev/api/interfaces/ijbetherc20splitspayerdeployer"},(0,l.kt)("inlineCode",{parentName:"a"},"IJBETHERC20SplitsPayerDeployer"))," interface."),(0,l.kt)("li",{parentName:"ul"},"The function returns the splits payer contract.")),(0,l.kt)("h4",{id:"body"},"Body"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Deploy the splits payer contract."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"// Deploy the splits payer.\nsplitsPayer = new JBETHERC20SplitsPayer(\n  _defaultSplitsProjectId,\n  _defaultSplitsDomain,\n  _defaultSplitsGroup,\n  _splitsStore,\n  _defaultProjectId,\n  _defaultBeneficiary,\n  _defaultPreferClaimedTokens,\n  _defaultMemo,\n  _defaultMetadata,\n  _defaultPreferAddToBalance,\n  _owner\n);\n")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("em",{parentName:"p"},"External references:")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayer"},(0,l.kt)("inlineCode",{parentName:"a"},"JBETHERC20SplitsPayer"))))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Emit a ",(0,l.kt)("inlineCode",{parentName:"p"},"DeploySplitsPayer")," event with all relevant parameters."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"emit DeploySplitsPayer(\n  splitsPayer,\n  _defaultSplitsProjectId,\n  _defaultSplitsDomain,\n  _defaultSplitsGroup,\n  _splitsStore,\n  _defaultProjectId,\n  _defaultBeneficiary,\n  _defaultPreferClaimedTokens,\n  _defaultMemo,\n  _defaultMetadata,\n  _defaultPreferAddToBalance,\n  _owner,\n  msg.sender\n);\n")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("em",{parentName:"p"},"Event references:")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayerdeployer/events/deploysplitspayer"},(0,l.kt)("inlineCode",{parentName:"a"},"DeploySplitsPayer"))))))),(0,l.kt)(i.Z,{value:"Code",label:"Code",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"/** \n  @notice \n  Allows anyone to deploy a new splits payer contract.\n\n  @param _defaultSplitsProjectId The ID of project for which the default splits are stored.\n  @param _defaultSplitsDomain The splits domain to payout when this contract receives direct payments.\n  @param _defaultSplitsGroup The splits group to payout when this contract receives direct payments.\n  @param _splitsStore A contract that stores splits for each project.\n  @param _defaultProjectId The ID of the project whose treasury should be forwarded the splits payer contract's received payment leftovers after distributing to the default splits group.\n  @param _defaultBeneficiary The address that'll receive the project's tokens when the splits payer receives payments. \n  @param _defaultPreferClaimedTokens A flag indicating whether issued tokens from the splits payer's received payments should be automatically claimed into the beneficiary's wallet. \n  @param _defaultMemo The memo that'll be forwarded with the splits payer's received payments. \n  @param _defaultMetadata The metadata that'll be forwarded with the splits payer's received payments. \n  @param _defaultPreferAddToBalance A flag indicating if received payments should call the `pay` function or the `addToBalance` function of a project.\n  @param _owner The address that will own the splits payer.\n\n  @return splitsPayer The splits payer contract.\n*/\nfunction deploySplitsPayer(\n  uint256 _defaultSplitsProjectId,\n  uint256 _defaultSplitsDomain,\n  uint256 _defaultSplitsGroup,\n  IJBSplitsStore _splitsStore,\n  uint256 _defaultProjectId,\n  address payable _defaultBeneficiary,\n  bool _defaultPreferClaimedTokens,\n  string memory _defaultMemo,\n  bytes memory _defaultMetadata,\n  bool _defaultPreferAddToBalance,\n  address _owner\n) external override returns (IJBSplitsPayer splitsPayer) {\n  // Deploy the splits payer.\n  splitsPayer = new JBETHERC20SplitsPayer(\n    _defaultSplitsProjectId,\n    _defaultSplitsDomain,\n    _defaultSplitsGroup,\n    _splitsStore,\n    _defaultProjectId,\n    _defaultBeneficiary,\n    _defaultPreferClaimedTokens,\n    _defaultMemo,\n    _defaultMetadata,\n    _defaultPreferAddToBalance,\n    _owner\n  );\n\n  emit DeploySplitsPayer(\n    splitsPayer,\n    _defaultSplitsProjectId,\n    _defaultSplitsDomain,\n    _defaultSplitsGroup,\n    _splitsStore,\n    _defaultProjectId,\n    _defaultBeneficiary,\n    _defaultPreferClaimedTokens,\n    _defaultMemo,\n    _defaultMetadata,\n    _defaultPreferAddToBalance,\n    _owner,\n    msg.sender\n  );\n}\n"))),(0,l.kt)(i.Z,{value:"Events",label:"Events",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Data"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-utilities/jbetherc20splitspayerdeployer/events/deploysplitspayer"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"DeploySplitsPayer")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,(0,l.kt)("a",{parentName:"td",href:"/dev/api/interfaces/ijbsplitspayer"},"IJBSplitsPayer")," indexed splitsPayer")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 indexed defaultSplitsProjectId")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 defaultSplitsDomain")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 defaultSplitsGroup")),(0,l.kt)("li",null,(0,l.kt)("code",null,(0,l.kt)("a",{parentName:"td",href:"/dev/api/interfaces/ijbsplitsstore"},"IJBSplitStore")," splitStore")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 defaultProjectId")),(0,l.kt)("li",null,(0,l.kt)("code",null,"address defaultBeneficiary")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bool defaultPreferClaimedTokens")),(0,l.kt)("li",null,(0,l.kt)("code",null,"string defaultMemo")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bytes defaultMetadata")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bool preferAddToBalance")),(0,l.kt)("li",null,(0,l.kt)("code",null,"address caller")))))))),(0,l.kt)(i.Z,{value:"Bug bounty",label:"Bug bounty",mdxType:"TabItem"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Category"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Reward"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Optimization")),(0,l.kt)("td",{parentName:"tr",align:null},"Help make this operation more efficient."),(0,l.kt)("td",{parentName:"tr",align:null},"0.5ETH")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Low severity")),(0,l.kt)("td",{parentName:"tr",align:null},"Identify a vulnerability in this operation that could lead to an inconvenience for a user of the protocol or for a protocol developer."),(0,l.kt)("td",{parentName:"tr",align:null},"1ETH")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"High severity")),(0,l.kt)("td",{parentName:"tr",align:null},"Identify a vulnerability in this operation that could lead to data corruption or loss of funds."),(0,l.kt)("td",{parentName:"tr",align:null},"5+ETH")))))))}m.isMDXComponent=!0}}]);