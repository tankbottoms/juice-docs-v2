"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[65822],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,h=m["".concat(c,".").concat(u)]||m[u]||d[u]||o;return a?n.createElement(h,l(l({ref:t},s),{},{components:a})):n.createElement(h,l({ref:t},s))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},31971:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const o={},l="Split allocator",i={unversionedId:"dev/build/treasury-extensions/split-allocator",id:"dev/build/treasury-extensions/split-allocator",title:"Split allocator",description:"Before implementing, learn about allocators here, and splits here.",source:"@site/docs/dev/build/treasury-extensions/split-allocator.md",sourceDirName:"dev/build/treasury-extensions",slug:"/dev/build/treasury-extensions/split-allocator",permalink:"/dev/build/treasury-extensions/split-allocator",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/build/treasury-extensions/split-allocator.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"Redemption delegate",permalink:"/dev/build/treasury-extensions/redemption-delegate"},next:{title:"Project payer",permalink:"/dev/build/utilities/project-payer"}},c={},p=[{value:"Specs",id:"specs",level:4},{value:"Attaching",id:"attaching",level:4}],s={toc:p};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"split-allocator"},"Split allocator"),(0,r.kt)("p",null,"Before implementing, learn about allocators ",(0,r.kt)("a",{parentName:"p",href:"/dev/learn/glossary/split-allocator"},"here"),", and splits ",(0,r.kt)("a",{parentName:"p",href:"/dev/learn/glossary/splits"},"here"),"."),(0,r.kt)("h4",{id:"specs"},"Specs"),(0,r.kt)("p",null,"A contract can become a split allocator by adhering to ",(0,r.kt)("a",{parentName:"p",href:"/dev/api/interfaces/ijbsplitallocator"},(0,r.kt)("inlineCode",{parentName:"a"},"IJBSplitAllocator")),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"interface IJBSplitAllocator {\n  function allocate(JBSplitAllocationData calldata _data) external payable;\n}\n")),(0,r.kt)("p",null,"When extending payout distribution or reserved token distribution functionality with an allocator, the protocol will pass a ",(0,r.kt)("a",{parentName:"p",href:"/dev/api/data-structures/jbsplitallocationdata"},(0,r.kt)("inlineCode",{parentName:"a"},"JBSplitAllocationData"))," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"allocate(...)")," function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"struct JBSplitAllocationData {\n  address token;\n  uint256 amount;\n  uint256 decimals;\n  uint256 projectId;\n  uint256 group;\n  JBSplit split;\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"struct JBSplit {\n  bool preferClaimed;\n  bool preferAddToBalance;\n  uint256 percent;\n  uint256 projectId;\n  address payable beneficiary;\n  uint256 lockedUntil;\n  IJBSplitAllocator allocator;\n}\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"msg.sender")," to the allocator will either be the payment terminal that facilitated the payout distribution, or the controller that facilitated the reserved tokens distribution."),(0,r.kt)("p",null,"In payment terminals based on the ",(0,r.kt)("a",{parentName:"p",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal"},(0,r.kt)("inlineCode",{parentName:"a"},"JBPayoutRedemptionPaymentTerminal")),", such as ",(0,r.kt)("a",{parentName:"p",href:"/dev/api/contracts/or-payment-terminals/jbethpaymentterminal/"},(0,r.kt)("inlineCode",{parentName:"a"},"JBETHPaymentTerminal")),"'s and ",(0,r.kt)("a",{parentName:"p",href:"/dev/api/contracts/or-payment-terminals/jberc20paymentterminal/"},(0,r.kt)("inlineCode",{parentName:"a"},"JBERC20PaymentTerminal")),"'s, the allocator hook gets called while the payouts are being distributed to splits. ",(0,r.kt)("a",{parentName:"p",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write/-_distributetopayoutsplitsof"},"View the docs"),". "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If the allocation is coming from an ETH payment terminal such as ",(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-payment-terminals/jbethpaymentterminal/"},(0,r.kt)("inlineCode",{parentName:"a"},"JBETHPaymentTerminal")),", the ETH will be included in the call to ",(0,r.kt)("inlineCode",{parentName:"li"},"allocate(...)"),". "),(0,r.kt)("li",{parentName:"ul"},"If the allocation is coming from an ERC20 payment terminal such as ",(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-payment-terminals/jberc20paymentterminal/"},(0,r.kt)("inlineCode",{parentName:"a"},"JBERC20PaymentTerminal")),", the tokens will be pre-approved for the allocator contract to transfer them to it. Make sure to initiate the transfer, and make sure to not leave allocated tokens stuck in the allocator contract."),(0,r.kt)("li",{parentName:"ul"},"If the allocation is coming from a controller such as ",(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-controllers/jbcontroller/"},(0,r.kt)("inlineCode",{parentName:"a"},"JBController"))," distributing reserved tokens, the tokens will be minted pre-distributed to the allocator's address. If the split's ",(0,r.kt)("inlineCode",{parentName:"li"},"preferClaimed")," property is ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," and the project has a token a contract attached, the tokens will be minted directly to the allocator contract. Otherwise, they will be allocated in the  ",(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/jbtokenstore/"},(0,r.kt)("inlineCode",{parentName:"a"},"JBTokenStore"))," as unclaimed tokens from which the allocator can then ",(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/jbtokenstore/write/claimfor"},(0,r.kt)("inlineCode",{parentName:"a"},"claimFor(...)"))," itself or ",(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/jbtokenstore/write/transferfrom"},(0,r.kt)("inlineCode",{parentName:"a"},"transferFrom(...)"))," itself to another address. Make sure to not leave allocated tokens stuck in the allocator contract or unclaimed in the ",(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/jbtokenstore/"},(0,r.kt)("inlineCode",{parentName:"a"},"JBTokenStore"))," contract.")),(0,r.kt)("h4",{id:"attaching"},"Attaching"),(0,r.kt)("p",null,"New allocator contracts should be deployed independently. Once deployed, its address can be configured into a project's payout splits or reserved token splits so that any distribution triggered while the funding cycle is active sends the relevant token to the allocator contract's ",(0,r.kt)("inlineCode",{parentName:"p"},"allocate(...)")," hook."))}d.isMDXComponent=!0}}]);