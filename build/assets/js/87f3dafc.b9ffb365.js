"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[32142],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),f=i,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},91994:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(87462),i=(n(67294),n(3905));const a={},o="IJBSplitsPayer",s={unversionedId:"dev/api/interfaces/ijbsplitspayer",id:"dev/api/interfaces/ijbsplitspayer",title:"IJBSplitsPayer",description:"Code",source:"@site/docs/dev/api/interfaces/ijbsplitspayer.md",sourceDirName:"dev/api/interfaces",slug:"/dev/api/interfaces/ijbsplitspayer",permalink:"/dev/api/interfaces/ijbsplitspayer",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/api/interfaces/ijbsplitspayer.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"IJBSplitAllocator",permalink:"/dev/api/interfaces/ijbsplitallocator"},next:{title:"IJBSplitsStore",permalink:"/dev/api/interfaces/ijbsplitsstore"}},l={},c=[{value:"Code",id:"code",level:4},{value:"Definition",id:"definition",level:4}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ijbsplitspayer"},"IJBSplitsPayer"),(0,i.kt)("h4",{id:"code"},"Code"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jbx-protocol/juice-contracts-v2/blob/main/contracts/interfaces/IJBSplitsPayer.sol"},"https://github.com/jbx-protocol/juice-contracts-v2/blob/main/contracts/interfaces/IJBSplitsPayer.sol")),(0,i.kt)("h4",{id:"definition"},"Definition"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"interface IJBSplitsPayer is IERC165 {\n  event SetDefaultSplits(\n    uint256 indexed projectId,\n    uint256 indexed domain,\n    uint256 indexed group,\n    address caller\n  );\n  event Pay(\n    uint256 indexed projectId,\n    address beneficiary,\n    address token,\n    uint256 amount,\n    uint256 decimals,\n    uint256 leftoverAmount,\n    uint256 minReturnedTokens,\n    bool preferClaimedTokens,\n    string memo,\n    bytes metadata,\n    address caller\n  );\n\n  event AddToBalance(\n    uint256 indexed projectId,\n    address beneficiary,\n    address token,\n    uint256 amount,\n    uint256 decimals,\n    uint256 leftoverAmount,\n    string memo,\n    bytes metadata,\n    address caller\n  );\n\n  event DistributeToSplitGroup(\n    uint256 indexed projectId,\n    uint256 indexed domain,\n    uint256 indexed group,\n    address caller\n  );\n\n  event DistributeToSplit(\n    JBSplit split,\n    uint256 amount,\n    address defaultBeneficiary,\n    address caller\n  );\n\n  function defaultSplitsProjectId() external view returns (uint256);\n\n  function defaultSplitsDomain() external view returns (uint256);\n\n  function defaultSplitsGroup() external view returns (uint256);\n\n  function splitsStore() external view returns (IJBSplitsStore);\n\n  function setDefaultSplits(\n    uint256 _projectId,\n    uint256 _domain,\n    uint256 _group\n  ) external;\n}\n")))}u.isMDXComponent=!0}}]);