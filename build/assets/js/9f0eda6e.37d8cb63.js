"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[58258],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>p});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),m=l(t),p=i,f=m["".concat(u,".").concat(p)]||m[p]||c[p]||a;return t?r.createElement(f,o(o({ref:n},s),{},{components:t})):r.createElement(f,o({ref:n},s))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var d={};for(var u in n)hasOwnProperty.call(n,u)&&(d[u]=n[u]);d.originalType=e,d.mdxType="string"==typeof e?e:i,o[1]=d;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9e4:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var r=t(87462),i=(t(67294),t(3905));const a={},o="IJBPayoutRedemptionPaymentTerminal",d={unversionedId:"dev/api/interfaces/ijbpayoutredemptionpaymentterminal",id:"dev/api/interfaces/ijbpayoutredemptionpaymentterminal",title:"IJBPayoutRedemptionPaymentTerminal",description:"Code",source:"@site/docs/dev/api/interfaces/ijbpayoutredemptionpaymentterminal.md",sourceDirName:"dev/api/interfaces",slug:"/dev/api/interfaces/ijbpayoutredemptionpaymentterminal",permalink:"/dev/api/interfaces/ijbpayoutredemptionpaymentterminal",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/api/interfaces/ijbpayoutredemptionpaymentterminal.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"IJBPaymentTerminal",permalink:"/dev/api/interfaces/ijbpaymentterminal"},next:{title:"IJBPayoutTerminal",permalink:"/dev/api/interfaces/ijbpayoutterminal"}},u={},l=[{value:"Code",id:"code",level:4},{value:"Definition",id:"definition",level:4}],s={toc:l};function c(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ijbpayoutredemptionpaymentterminal"},"IJBPayoutRedemptionPaymentTerminal"),(0,i.kt)("h4",{id:"code"},"Code"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jbx-protocol/juice-contracts-v2/blob/main/contracts/interfaces/IJBPayoutRedemptionPaymentTerminal.sol"},"https://github.com/jbx-protocol/juice-contracts-v2/blob/main/contracts/interfaces/IJBPayoutRedemptionPaymentTerminal.sol")),(0,i.kt)("h4",{id:"definition"},"Definition"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"interface IJBPayoutRedemptionPaymentTerminal is\n  IJBPaymentTerminal,\n  IJBPayoutTerminal,\n  IJBAllowanceTerminal,\n  IJBRedemptionTerminal\n{\n  event AddToBalance(\n    uint256 indexed projectId,\n    uint256 amount,\n    uint256 refundedFees,\n    string memo,\n    bytes metadata,\n    address caller\n  );\n\n  event Migrate(\n    uint256 indexed projectId,\n    IJBPaymentTerminal indexed to,\n    uint256 amount,\n    address caller\n  );\n\n  event DistributePayouts(\n    uint256 indexed fundingCycleConfiguration,\n    uint256 indexed fundingCycleNumber,\n    uint256 indexed projectId,\n    address beneficiary,\n    uint256 amount,\n    uint256 distributedAmount,\n    uint256 fee,\n    uint256 beneficiaryDistributionAmount,\n    string memo,\n    address caller\n  );\n\n  event UseAllowance(\n    uint256 indexed fundingCycleConfiguration,\n    uint256 indexed fundingCycleNumber,\n    uint256 indexed projectId,\n    address beneficiary,\n    uint256 amount,\n    uint256 distributedAmount,\n    uint256 netDistributedamount,\n    string memo,\n    address caller\n  );\n\n  event HoldFee(\n    uint256 indexed projectId,\n    uint256 indexed amount,\n    uint256 indexed fee,\n    uint256 feeDiscount,\n    address beneficiary,\n    address caller\n  );\n\n  event ProcessFee(\n    uint256 indexed projectId,\n    uint256 indexed amount,\n    address beneficiary,\n    address caller\n  );\n\n  event RefundHeldFees(\n    uint256 indexed projectId,\n    uint256 indexed amount,\n    uint256 indexed refundedFees,\n    uint256 leftoverAmount,\n    address caller\n  );\n\n  event Pay(\n    uint256 indexed fundingCycleConfiguration,\n    uint256 indexed fundingCycleNumber,\n    uint256 indexed projectId,\n    address payer,\n    address beneficiary,\n    uint256 amount,\n    uint256 beneficiaryTokenCount,\n    string memo,\n    bytes metadata,\n    address caller\n  );\n\n  event DelegateDidPay(IJBPayDelegate indexed delegate, JBDidPayData data, address caller);\n\n  event RedeemTokens(\n    uint256 indexed fundingCycleConfiguration,\n    uint256 indexed fundingCycleNumber,\n    uint256 indexed projectId,\n    address holder,\n    address beneficiary,\n    uint256 tokenCount,\n    uint256 reclaimedAmount,\n    string memo,\n    address caller\n  );\n\n  event DelegateDidRedeem(\n    IJBRedemptionDelegate indexed delegate,\n    JBDidRedeemData data,\n    address caller\n  );\n\n  event DistributeToPayoutSplit(\n    uint256 indexed projectId,\n    uint256 indexed domain,\n    uint256 indexed group,\n    JBSplit split,\n    uint256 amount,\n    address caller\n  );\n\n  event SetFee(uint256 fee, address caller);\n\n  event SetFeeGauge(IJBFeeGauge indexed feeGauge, address caller);\n\n  event SetFeelessAddress(address indexed addrs, bool indexed flag, address caller);\n\n  function projects() external view returns (IJBProjects);\n\n  function splitsStore() external view returns (IJBSplitsStore);\n\n  function directory() external view returns (IJBDirectory);\n\n  function prices() external view returns (IJBPrices);\n\n  function store() external view returns (IJBSingleTokenPaymentTerminalStore);\n\n  function baseWeightCurrency() external view returns (uint256);\n\n  function payoutSplitsGroup() external view returns (uint256);\n\n  function heldFeesOf(uint256 _projectId) external view returns (JBFee[] memory);\n\n  function fee() external view returns (uint256);\n\n  function feeGauge() external view returns (IJBFeeGauge);\n\n  function isFeelessTerminal(IJBPaymentTerminal _terminal) external view returns (bool);\n\n  function migrate(uint256 _projectId, IJBPaymentTerminal _to) external returns (uint256 balance);\n\n  function processFees(uint256 _projectId) external;\n\n  function setFee(uint256 _fee) external;\n\n  function setFeeGauge(IJBFeeGauge _feeGauge) external;\n\n  function setFeelessAddress(address _address, bool _flag) external;\n}\n")))}c.isMDXComponent=!0}}]);