"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[28045],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=a.createContext({}),p=function(e){var t=a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,f=u["".concat(d,".").concat(m)]||u[m]||s[m]||l;return r?a.createElement(f,i(i({ref:t},c),{},{components:r})):a.createElement(f,i({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var p=2;p<l;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},85162:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(67294),n=r(86010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:r,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.Z)(l,i),hidden:r},t)}},65488:(e,t,r)=>{r.d(t,{Z:()=>m});var a=r(87462),n=r(67294),l=r(86010),i=r(72389),o=r(67392),d=r(7094),p=r(12466);const c="tabList__CuJ",s="tabItem_LNqP";function u(e){var t,r;const{lazy:i,block:u,defaultValue:m,values:f,groupId:k,className:b}=e,h=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=f?f:h.map((e=>{let{props:{value:t,label:r,attributes:a}}=e;return{value:t,label:r,attributes:a}})),N=(0,o.l)(v,((e,t)=>e.value===t.value));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===m?m:null!=(t=null!=m?m:null==(r=h.find((e=>e.props.default)))?void 0:r.props.value)?t:h[0].props.value;if(null!==y&&!v.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:g,setTabGroupChoices:_}=(0,d.U)(),[E,T]=(0,n.useState)(y),w=[],{blockElementScrollPositionUntilNextRender:j}=(0,p.o5)();if(null!=k){const e=g[k];null!=e&&e!==E&&v.some((t=>t.value===e))&&T(e)}const O=e=>{const t=e.currentTarget,r=w.indexOf(t),a=v[r].value;a!==E&&(j(t),T(a),null!=k&&_(k,String(a)))},C=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{var a;const t=w.indexOf(e.currentTarget)+1;r=null!=(a=w[t])?a:w[0];break}case"ArrowLeft":{var n;const t=w.indexOf(e.currentTarget)-1;r=null!=(n=w[t])?n:w[w.length-1];break}}null==(t=r)||t.focus()};return n.createElement("div",{className:(0,l.Z)("tabs-container",c)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":u},b)},v.map((e=>{let{value:t,label:r,attributes:i}=e;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:e=>w.push(e),onKeyDown:C,onFocus:O,onClick:O},i,{className:(0,l.Z)("tabs__item",s,null==i?void 0:i.className,{"tabs__item--active":E===t})}),null!=r?r:t)}))),i?(0,n.cloneElement)(h.filter((e=>e.props.value===E))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==E})))))}function m(e){const t=(0,i.Z)();return n.createElement(u,(0,a.Z)({key:String(t)},e))}},75249:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=r(87462),n=(r(67294),r(3905)),l=r(65488),i=r(85162);const o={},d="addFeedFor",p={unversionedId:"dev/api/contracts/jbprices/write/addfeed",id:"dev/api/contracts/jbprices/write/addfeed",title:"addFeedFor",description:"Contract: JBPrices\u200b\u200c",source:"@site/docs/dev/api/contracts/jbprices/write/addfeed.md",sourceDirName:"dev/api/contracts/jbprices/write",slug:"/dev/api/contracts/jbprices/write/addfeed",permalink:"/dev/api/contracts/jbprices/write/addfeed",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/api/contracts/jbprices/write/addfeed.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"priceFor",permalink:"/dev/api/contracts/jbprices/read/pricefor"},next:{title:"JBOperatorStore",permalink:"/dev/api/contracts/jboperatorstore/"}},c={},s=[{value:"Definition",id:"definition",level:4},{value:"Body",id:"body",level:4}],u={toc:s};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"addfeedfor"},"addFeedFor"),(0,n.kt)("p",null,"Contract: ",(0,n.kt)("a",{parentName:"p",href:"/dev/api/contracts/jbprices/"},(0,n.kt)("inlineCode",{parentName:"a"},"JBPrices")),"\u200b\u200c"),(0,n.kt)("p",null,"Interface: ",(0,n.kt)("a",{parentName:"p",href:"/dev/api/interfaces/ijbprices"},(0,n.kt)("inlineCode",{parentName:"a"},"IJBPrices"))),(0,n.kt)(l.Z,{mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"Step by step",label:"Step by step",mdxType:"TabItem"},(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Add a price feed for a currency in terms of the provided base currency.")),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Current feeds can't be modified.")),(0,n.kt)("h4",{id:"definition"},"Definition"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"function addFeedFor(\n  uint256 _currency,\n  uint256 _base,\n  IJBPriceFeed _feed\n) external override onlyOwner { ... }\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Arguments:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"_currency")," is the currency that the price feed is for."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"_base")," is the currency that the price feed is based on."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"_feed")," is the ",(0,n.kt)("a",{parentName:"li",href:"/dev/api/interfaces/ijbpricefeed"},(0,n.kt)("inlineCode",{parentName:"a"},"IJBPriceFeed"))," contract being added."))),(0,n.kt)("li",{parentName:"ul"},"Through the ",(0,n.kt)("a",{parentName:"li",href:"https://docs.openzeppelin.com/contracts/4.x/api/access#Ownable-onlyOwner--"},(0,n.kt)("inlineCode",{parentName:"a"},"onlyOwner"))," modifier, this function can only be accessed by the address that owns this contract."),(0,n.kt)("li",{parentName:"ul"},"The function overrides a function definition from the ",(0,n.kt)("a",{parentName:"li",href:"/dev/api/interfaces/ijbprices"},(0,n.kt)("inlineCode",{parentName:"a"},"IJBPrices"))," interface."),(0,n.kt)("li",{parentName:"ul"},"The function doesn't return anything.")),(0,n.kt)("h4",{id:"body"},"Body"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Make sure there isn't already a price feed set for the currency base pair."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"// There can't already be a feed for the specified currency.\nif (feedFor[_currency][_base] != IJBPriceFeed(address(0))) revert PRICE_FEED_ALREADY_EXISTS();\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("em",{parentName:"p"},"Internal references:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/dev/api/contracts/jbprices/properties/feedfor"},(0,n.kt)("inlineCode",{parentName:"a"},"feedFor"))))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Store the provided feed for the currency base pair."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"// Store the feed.\nfeedFor[_currency][_base] = _feed;\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("em",{parentName:"p"},"Internal references:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/dev/api/contracts/jbprices/properties/feedfor"},(0,n.kt)("inlineCode",{parentName:"a"},"feedFor"))))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Emit an ",(0,n.kt)("inlineCode",{parentName:"p"},"AddFeed")," event with the relevant parameters."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"emit AddFeed(_currency, _base, _feed);\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("em",{parentName:"p"},"Event references:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/dev/api/contracts/jbprices/events/addfeed"},(0,n.kt)("inlineCode",{parentName:"a"},"AddFeed"))))))),(0,n.kt)(i.Z,{value:"Code",label:"Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"/** \n  @notice \n  Add a price feed for a currency in terms of the provided base currency.\n\n  @dev\n  Current feeds can't be modified.\n\n  @param _currency The currency that the price feed is for.\n  @param _base The currency that the price feed is based on.\n  @param _feed The price feed being added.\n*/\nfunction addFeedFor(\n  uint256 _currency,\n  uint256 _base,\n  IJBPriceFeed _feed\n) external override onlyOwner {\n  // There can't already be a feed for the specified currency.\n  if (feedFor[_currency][_base] != IJBPriceFeed(address(0))) revert PRICE_FEED_ALREADY_EXISTS();\n\n  // Store the feed.\n  feedFor[_currency][_base] = _feed;\n\n  emit AddFeed(_currency, _base, _feed);\n}\n"))),(0,n.kt)(i.Z,{value:"Errors",label:"Errors",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"String"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"strong"},"PRICE_FEED_ALREADY_EXISTS"))),(0,n.kt)("td",{parentName:"tr",align:null},"Thrown if the specified currency already has an associated price feed."))))),(0,n.kt)(i.Z,{value:"Events",label:"Events",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Data"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/dev/api/contracts/jbprices/events/addfeed"},(0,n.kt)("strong",{parentName:"a"},(0,n.kt)("inlineCode",{parentName:"strong"},"AddFeed")))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("ul",null,(0,n.kt)("li",null,(0,n.kt)("code",null,"uint256 indexed currency")),(0,n.kt)("li",null,(0,n.kt)("code",null,"uint256 indexed base")),(0,n.kt)("li",null,(0,n.kt)("code",null,(0,n.kt)("a",{parentName:"td",href:"/dev/api/interfaces/ijbpricefeed"},"IJBPriceFeed")," feed")))))))),(0,n.kt)(i.Z,{value:"Bug bounty",label:"Bug bounty",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Category"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"),(0,n.kt)("th",{parentName:"tr",align:null},"Reward"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Optimization")),(0,n.kt)("td",{parentName:"tr",align:null},"Help make this operation more efficient."),(0,n.kt)("td",{parentName:"tr",align:null},"0.5ETH")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Low severity")),(0,n.kt)("td",{parentName:"tr",align:null},"Identify a vulnerability in this operation that could lead to an inconvenience for a user of the protocol or for a protocol developer."),(0,n.kt)("td",{parentName:"tr",align:null},"1ETH")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"High severity")),(0,n.kt)("td",{parentName:"tr",align:null},"Identify a vulnerability in this operation that could lead to data corruption or loss of funds."),(0,n.kt)("td",{parentName:"tr",align:null},"5+ETH")))))))}m.isMDXComponent=!0}}]);