"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[15057],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),c=r,f=d["".concat(s,".").concat(c)]||d[c]||m[c]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const i="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(87462),r=n(67294),i=n(86010),o=n(72389),l=n(67392),s=n(7094),u=n(12466);const p="tabList__CuJ",m="tabItem_LNqP";function d(e){var t,n;const{lazy:o,block:d,defaultValue:c,values:f,groupId:b,className:k}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=f?f:h.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),N=(0,l.l)(y,((e,t)=>e.value===t.value));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const v=null===c?c:null!=(t=null!=c?c:null==(n=h.find((e=>e.props.default)))?void 0:n.props.value)?t:h[0].props.value;if(null!==v&&!y.some((e=>e.value===v)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+y.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:_,setTabGroupChoices:g}=(0,s.U)(),[w,D]=(0,r.useState)(v),j=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=b){const e=_[b];null!=e&&e!==w&&y.some((t=>t.value===e))&&D(e)}const A=e=>{const t=e.currentTarget,n=j.indexOf(t),a=y[n].value;a!==w&&(T(t),D(a),null!=b&&g(b,String(a)))},C=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=j.indexOf(e.currentTarget)+1;n=null!=(a=j[t])?a:j[0];break}case"ArrowLeft":{var r;const t=j.indexOf(e.currentTarget)-1;n=null!=(r=j[t])?r:j[j.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},k)},y.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>j.push(e),onKeyDown:C,onFocus:A,onClick:A},o,{className:(0,i.Z)("tabs__item",m,null==o?void 0:o.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),o?(0,r.cloneElement)(h.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function c(e){const t=(0,o.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},48032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>u,toc:()=>m});var a=n(87462),r=(n(67294),n(3905)),i=n(65488),o=n(85162);const l={},s="_distributePayoutsOf",u={unversionedId:"dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write/-_distributepayoutsof",id:"dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write/-_distributepayoutsof",title:"_distributePayoutsOf",description:"Contract: JBSingleTokenPaymentTerminalStore\u200b\u200c",source:"@site/docs/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write/-_distributepayoutsof.md",sourceDirName:"dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write",slug:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write/-_distributepayoutsof",permalink:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write/-_distributepayoutsof",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write/-_distributepayoutsof.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"_transferFrom",permalink:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write/-_beforetransferto"},next:{title:"_distributeToPayoutSplitsOf",permalink:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write/-_distributetopayoutsplitsof"}},p={},m=[{value:"Definition",id:"definition",level:4},{value:"Body",id:"body",level:4}],d={toc:m};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"_distributepayoutsof"},"_distributePayoutsOf"),(0,r.kt)("p",null,"Contract: ",(0,r.kt)("a",{parentName:"p",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/"},(0,r.kt)("inlineCode",{parentName:"a"},"JBSingleTokenPaymentTerminalStore")),"\u200b\u200c"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Step by step",label:"Step by step",mdxType:"TabItem"},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Distributes payouts for a project with the distribution limit of its current funding cycle.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Payouts are sent to the preprogrammed splits. Any leftover is sent to the project's owner.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Anyone can distribute payouts on a project's behalf. The project can preconfigure a wildcard split that is used to send funds to msg.sender. This can be used to incentivize calling this function.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"All funds distributed outside of this contract or any feeless terminals incure the protocol fee.")," "),(0,r.kt)("h4",{id:"definition"},"Definition"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"function _distributePayoutsOf(\n  uint256 _projectId,\n  uint256 _amount,\n  uint256 _currency,\n  uint256 _minReturnedTokens,\n  string calldata _memo\n) private returns (uint256 netLeftoverDistributionAmount) { ... }\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Arguments:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_projectId")," is the ID of the project having its payouts distributed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_amount")," is the amount of terminal tokens to distribute, as a fixed point number with same number of decimals as this terminal."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_currency")," is the expected currency of the amount being distributed. Must match the project's current funding cycle's distribution limit currency."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_minReturnedTokens")," is the minimum number of terminal tokens that the ",(0,r.kt)("inlineCode",{parentName:"li"},"_amount")," should be valued at in terms of this terminal's currency, as a fixed point number with the same number of decimals as this terminal."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_memo")," is a memo to pass along to the emitted event."))),(0,r.kt)("li",{parentName:"ul"},"The function is private to this contract."),(0,r.kt)("li",{parentName:"ul"},"The function returns the amount that was sent to the project owner, as a fixed point number with the same amount of decimals as this terminal.")),(0,r.kt)("h4",{id:"body"},"Body"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Record the distribution. "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"// Record the distribution.\n(JBFundingCycle memory _fundingCycle, uint256 _distributedAmount) = store.recordDistributionFor(\n  _projectId,\n  _amount,\n  _currency\n);\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Internal references:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/properties/store"},(0,r.kt)("inlineCode",{parentName:"a"},"store")))),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"External references:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/jbsingletokenpaymentterminalstore/write/recorddistributionfor"},(0,r.kt)("inlineCode",{parentName:"a"},"recordDistributionFor"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure the distributed amount is at least as much as the minimum expected amount."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"// The amount being distributed must be at least as much as was expected.\nif (_distributedAmount < _minReturnedTokens) revert INADEQUATE_DISTRIBUTION_AMOUNT();\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Get a reference to the project's owner. The owner will be allocated any funds leftover once splits are settled."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"// Get a reference to the project owner, which will receive tokens from paying the platform fee\n// and receive any extra distributable funds not allocated to payout splits.\naddress payable _projectOwner = payable(projects.ownerOf(_projectId));\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"External references:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.openzeppelin.com/contracts/4.x/api/token/erc721#IERC721-ownerOf-uint256-"},(0,r.kt)("inlineCode",{parentName:"a"},"ownerOf"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'The following scoped block is a bit of a hack to prevent a "Stack too deep" error. Define a few variables outside of the scope that\'ll be set within the scope but later referenced again outside.'),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"// Define variables that will be needed outside the scoped section below.\n// Keep a reference to the fee amount that was paid.\nuint256 _fee;\n\n// Scoped section prevents stack too deep. `_feeDiscount`, `_feeEligibleDistributionAmount`, and `_leftoverDistributionAmount` only used within scope.\n{ ... }\n")),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Get a reference to the discount that'll be used when applying the fee. If the fee is 0, set the discount to be 100% to simplify subsequent calculations. No fee is the same as a full discount. "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"// Get the amount of discount that should be applied to any fees taken.\n// If the fee is zero or if the fee is being used by an address that doesn't incur fees, set the discount to 100% for convinience.\nuint256 _feeDiscount = fee == 0 || isFeelessAddress[msg.sender]\n  ? JBConstants.MAX_FEE_DISCOUNT\n  : _currentFeeDiscount(_projectId);\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Library references:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/libraries/jbconstants"},(0,r.kt)("inlineCode",{parentName:"a"},"JBConstants")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".MAX_FEE_DISCOUNT(...)"))))),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Internal references:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/properties/isfeelessaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"isFeelessAddress"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/read/-_currentfeediscount"},(0,r.kt)("inlineCode",{parentName:"a"},"_currentFeeDiscount"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Get a reference to the amount of distributed funds from which fees should be taken, and the amount leftover after distributing splits."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"// The amount distributed that is eligible for incurring fees.\nuint256 _feeEligibleDistributionAmount;\n\n// The amount leftover after distributing to the splits.\nuint256 _leftoverDistributionAmount;d\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Distribute the amount to all payout splits. Get a reference to any leftover amount, and all amounts sent to splits from which fees should be taken."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"// Payout to splits and get a reference to the leftover amount after all splits have been paid.\n// Also get a reference to the amount that was distributed to splits from which fees should be taken.\n(_leftoverDistributionAmount, _feeEligibleDistributionAmount) = _distributeToPayoutSplitsOf(\n  _projectId,\n  _fundingCycle.configuration,\n  payoutSplitsGroup,\n  _distributedAmount,\n  _feeDiscount\n);\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Internal references:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/properties/payoutsplitsgroup"},(0,r.kt)("inlineCode",{parentName:"a"},"payoutSplitsGroup"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write/-_distributetopayoutsplitsof"},(0,r.kt)("inlineCode",{parentName:"a"},"_distributeToPayoutSplitsOf"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the leftover distribution amount to the amount from which fees should be taken since those funds will be leaving the ecosystem to the project owner's address."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"// Leftover distribution amount is also eligible for a fee since the funds are going out of the ecosystem to _beneficiary.\nunchecked {\n  _feeEligibleDistributionAmount += _leftoverDistributionAmount;\n}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Take the fee if needed."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"// Take the fee.\n_fee = _feeDiscount == JBConstants.MAX_FEE_DISCOUNT ||\n  _feeEligibleDistributionAmount == 0\n  ? 0\n  : _takeFeeFrom(\n    _projectId,\n    _fundingCycle,\n    _feeEligibleDistributionAmount,\n    _projectOwner,\n    _feeDiscount\n  );\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Library references:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/libraries/jbconstants"},(0,r.kt)("inlineCode",{parentName:"a"},"JBConstants")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".MAX_FEE_DISCOUNT(...)"))))),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Internal references:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write/-_takefeefrom"},(0,r.kt)("inlineCode",{parentName:"a"},"_takeFeeFrom"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Calculate what the net value of the leftover distribution will be."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"// Get a reference to how much to distribute to the project owner, which is the leftover amount minus any fees.\nunchecked {\n  netLeftoverDistributionAmount = _leftoverDistributionAmount == 0\n    ? 0\n    : _leftoverDistributionAmount - _feeAmount(_leftoverDistributionAmount, fee, _feeDiscount);\n}\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Internal references:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/properties/fee"},(0,r.kt)("inlineCode",{parentName:"a"},"fee"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/read/-_feeamount"},(0,r.kt)("inlineCode",{parentName:"a"},"_feeAmount"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Transfer any leftover amount to the project owner if needed."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"// Transfer any remaining balance to the project owner.\nif (netLeftoverDistributionAmount > 0)\n  _transferFrom(address(this), _projectOwner, netLeftoverDistributionAmount);\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Virtual references:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/write/-_transferfrom"},(0,r.kt)("inlineCode",{parentName:"a"},"_transferFrom"))))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Emit a ",(0,r.kt)("inlineCode",{parentName:"p"},"DistributePayouts")," event with the relevant parameters."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"emit DistributePayouts(\n  _fundingCycle.configuration,\n  _fundingCycle.number,\n  _projectId,\n  _projectOwner,\n  _amount,\n  _distributedAmount,\n  _fee,\n  netLeftoverDistributionAmount,\n  _memo,\n  msg.sender\n);\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Event references:")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/events/distributepayouts"},(0,r.kt)("inlineCode",{parentName:"a"},"DistributePayouts"))))))),(0,r.kt)(o.Z,{value:"Code",label:"Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/**\n  @notice\n  Distributes payouts for a project with the distribution limit of its current funding cycle.\n\n  @dev\n  Payouts are sent to the preprogrammed splits. Any leftover is sent to the project's owner.\n\n  @dev\n  Anyone can distribute payouts on a project's behalf. The project can preconfigure a wildcard split that is used to send funds to msg.sender. This can be used to incentivize calling this function.\n\n  @dev\n  All funds distributed outside of this contract or any feeless terminals incure the protocol fee.\n\n  @param _projectId The ID of the project having its payouts distributed.\n  @param _amount The amount of terminal tokens to distribute, as a fixed point number with same number of decimals as this terminal.\n  @param _currency The expected currency of the amount being distributed. Must match the project's current funding cycle's distribution limit currency.\n  @param _minReturnedTokens The minimum number of terminal tokens that the `_amount` should be valued at in terms of this terminal's currency, as a fixed point number with the same number of decimals as this terminal.\n  @param _memo A memo to pass along to the emitted event.\n\n  @return netLeftoverDistributionAmount The amount that was sent to the project owner, as a fixed point number with the same amount of decimals as this terminal.\n*/\nfunction _distributePayoutsOf(\n  uint256 _projectId,\n  uint256 _amount,\n  uint256 _currency,\n  uint256 _minReturnedTokens,\n  string calldata _memo\n) private returns (uint256 netLeftoverDistributionAmount) {\n  // Record the distribution.\n  (JBFundingCycle memory _fundingCycle, uint256 _distributedAmount) = store.recordDistributionFor(\n      _projectId,\n      _amount,\n      _currency\n    );\n\n  // The amount being distributed must be at least as much as was expected.\n  if (_distributedAmount < _minReturnedTokens) revert INADEQUATE_DISTRIBUTION_AMOUNT();\n\n  // Get a reference to the project owner, which will receive tokens from paying the platform fee\n  // and receive any extra distributable funds not allocated to payout splits.\n  address payable _projectOwner = payable(projects.ownerOf(_projectId));\n\n  // Define variables that will be needed outside the scoped section below.\n  // Keep a reference to the fee amount that was paid.\n  uint256 _fee;\n\n  // Scoped section prevents stack too deep. `_feeDiscount`, `_feeEligibleDistributionAmount`, and `_leftoverDistributionAmount` only used within scope.\n  {\n    // Get the amount of discount that should be applied to any fees taken.\n    // If the fee is zero or if the fee is being used by an address that doesn't incur fees, set the discount to 100% for convinience.\n    uint256 _feeDiscount = fee == 0 || isFeelessAddress[msg.sender]\n      ? JBConstants.MAX_FEE_DISCOUNT\n      : _currentFeeDiscount(_projectId);\n\n    // The amount distributed that is eligible for incurring fees.\n    uint256 _feeEligibleDistributionAmount;\n\n    // The amount leftover after distributing to the splits.\n    uint256 _leftoverDistributionAmount;d\n\n    // Payout to splits and get a reference to the leftover transfer amount after all splits have been paid.\n    // Also get a reference to the amount that was distributed to splits from which fees should be taken.\n    (_leftoverDistributionAmount, _feeEligibleDistributionAmount) = _distributeToPayoutSplitsOf(\n      _projectId,\n      _fundingCycle.configuration,\n      payoutSplitsGroup,\n      _distributedAmount,\n      _feeDiscount\n    );\n\n    // Leftover distribution amount is also eligible for a fee since the funds are going out of the ecosystem to _beneficiary.\n    unchecked {\n      _feeEligibleDistributionAmount += _leftoverDistributionAmount;\n    }\n\n    // Take the fee.\n    _fee = _feeDiscount == JBConstants.MAX_FEE_DISCOUNT ||\n      _feeEligibleDistributionAmount == 0\n      ? 0\n      : _takeFeeFrom(\n        _projectId,\n        _fundingCycle,\n        _feeEligibleDistributionAmount,\n        _projectOwner,\n        _feeDiscount\n      );\n\n    // Get a reference to how much to distribute to the project owner, which is the leftover amount minus any fees.\n    unchecked {\n      netLeftoverDistributionAmount = _leftoverDistributionAmount == 0\n        ? 0\n        : _leftoverDistributionAmount - _feeAmount(_leftoverDistributionAmount, _feeDiscount);\n    }\n\n    // Transfer any remaining balance to the project owner.\n    if (netLeftoverDistributionAmount > 0)\n      _transferFrom(address(this), _projectOwner, netLeftoverDistributionAmount);\n  }\n\n  emit DistributePayouts(\n    _fundingCycle.configuration,\n    _fundingCycle.number,\n    _projectId,\n    _projectOwner,\n    _amount,\n    _distributedAmount,\n    _fee,\n    netLeftoverDistributionAmount,\n    _memo,\n    msg.sender\n  );\n}\n"))),(0,r.kt)(o.Z,{value:"Errors",label:"Errors",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"String"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"INADEQUATE_DISTRIBUTION_AMOUNT"))),(0,r.kt)("td",{parentName:"tr",align:null},"Thrown if the amount being distributed is less than the specified minimum."))))),(0,r.kt)(o.Z,{value:"Events",label:"Events",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Data"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/dev/api/contracts/or-payment-terminals/or-abstract/jbpayoutredemptionpaymentterminal/events/distributepayouts"},(0,r.kt)("strong",{parentName:"a"},(0,r.kt)("inlineCode",{parentName:"strong"},"DistributePayouts")))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("code",null,"uint256 indexed fundingCycleConfiguration")),(0,r.kt)("li",null,(0,r.kt)("code",null,"uint256 indexed fundingCycleNumber")),(0,r.kt)("li",null,(0,r.kt)("code",null,"uint256 indexed projectId")),(0,r.kt)("li",null,(0,r.kt)("code",null,"address beneficiary")),(0,r.kt)("li",null,(0,r.kt)("code",null,"uint256 amount")),(0,r.kt)("li",null,(0,r.kt)("code",null,"uint256 distributedAmount")),(0,r.kt)("li",null,(0,r.kt)("code",null,"uint256 feeAmount")),(0,r.kt)("li",null,(0,r.kt)("code",null,"uint256 beneficiaryDistributionAmount")),(0,r.kt)("li",null,(0,r.kt)("code",null,"string memo")),(0,r.kt)("li",null,(0,r.kt)("code",null,"address caller")))))))),(0,r.kt)(o.Z,{value:"Bug bounty",label:"Bug bounty",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Category"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Reward"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Optimization")),(0,r.kt)("td",{parentName:"tr",align:null},"Help make this operation more efficient."),(0,r.kt)("td",{parentName:"tr",align:null},"0.5ETH")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Low severity")),(0,r.kt)("td",{parentName:"tr",align:null},"Identify a vulnerability in this operation that could lead to an inconvenience for a user of the protocol or for a protocol developer."),(0,r.kt)("td",{parentName:"tr",align:null},"1ETH")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"High severity")),(0,r.kt)("td",{parentName:"tr",align:null},"Identify a vulnerability in this operation that could lead to data corruption or loss of funds."),(0,r.kt)("td",{parentName:"tr",align:null},"5+ETH")))))))}c.isMDXComponent=!0}}]);