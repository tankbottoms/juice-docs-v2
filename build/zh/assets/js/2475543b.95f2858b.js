"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[38160],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||s[f]||o;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},26769:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={},l="Read",i={unversionedId:"dev/protocol-v1/terminalv1/read",id:"dev/protocol-v1/terminalv1/read",title:"Read",description:"canPrintPreminedTickets",source:"@site/docs/dev/protocol-v1/terminalv1/read.md",sourceDirName:"dev/protocol-v1/terminalv1",slug:"/dev/protocol-v1/terminalv1/read",permalink:"/zh/dev/protocol-v1/terminalv1/read",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/protocol-v1/terminalv1/read.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"TerminalV1",permalink:"/zh/dev/protocol-v1/terminalv1/"},next:{title:"Write",permalink:"/zh/dev/protocol-v1/terminalv1/write"}},c={},u=[{value:"canPrintPreminedTickets",id:"canprintpreminedtickets",level:3},{value:"claimableOverflowOf",id:"claimableoverflowof",level:3},{value:"currentOverflowOf",id:"currentoverflowof",level:3},{value:"governance",id:"governance",level:3},{value:"reservedTicketBalanceOf",id:"reservedticketbalanceof",level:3},{value:"TO-DO",id:"to-do",level:3}],p={toc:u};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"read"},"Read"),(0,a.kt)("h3",{id:"canprintpreminedtickets"},"canPrintPreminedTickets"),(0,a.kt)("p",null,"Whether or not a project can still print premined tickets."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Params:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"_projectId"),":The ID of the project to get the status of.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns:")," Boolean flag."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function canPrintPreminedTickets(uint256 _projectId)\n    external\n    view\n    returns (bool);\n")),(0,a.kt)("h3",{id:"claimableoverflowof"},"claimableOverflowOf"),(0,a.kt)("p",null,"The amount of tokens that can be claimed by the given address."),(0,a.kt)("p",null,"The _account must have at least _count tickets for the specified project.\\\nIf there is a funding cycle reconfiguration ballot open for the project, the project's current bonding curve is bypassed."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Params:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"_account"),": The address to get an amount for.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"_projectId"),": The ID of the project to get a claimable amount for.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"_count"),": The number of Tickets that would be redeemed to get the resulting amount."),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Returns"),": The amount of tokens that can be claimed"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function claimableOverflowOf(\n    address _account,\n    uint256 _projectId,\n    uint256 _count\n) external view returns (uint256)\n")),(0,a.kt)("h3",{id:"currentoverflowof"},"currentOverflowOf"),(0,a.kt)("p",null,"Gets the current overflowed amount for a specified project."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Params:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"_projectId"),": The ID of the project to get overflow for.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns")," The current overflow of funds for the project."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function currentOverflowOf(uint256 _projectId)\n    external\n    view\n    returns (uint256 overflow)\n")),(0,a.kt)("h3",{id:"governance"},"governance"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns")," The address of the current governance"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"function governance() external view returns (address payable);\n")),(0,a.kt)("h3",{id:"reservedticketbalanceof"},"reservedTicketBalanceOf"),(0,a.kt)("p",null,"Gets the amount of reserved tickets that a project has."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Params:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"_projectId"),": The ID of the project to get overflow for."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"_reservedRate"),": The reserved rate to use to make the calculation.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns:")," amount overflow The current overflow of funds for the project."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"function reservedTicketBalanceOf(uint256 _projectId, uint256 _reservedRate)\n    external\n    view\n    returns (uint256);\n")),(0,a.kt)("h3",{id:""}),(0,a.kt)("h3",{id:"to-do"},"TO-DO"),(0,a.kt)("p",null,"Read functions yet to be documented"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"function pendingGovernance() external view returns (address payable);\n\nfunction projects() external view returns (IProjects);\n\nfunction fundingCycles() external view returns (IFundingCycles);\n\nfunction ticketBooth() external view returns (ITicketBooth);\n\nfunction prices() external view returns (IPrices);\n\nfunction modStore() external view returns (IModStore);\n\nfunction balanceOf(uint256 _projectId) external view returns (uint256);\n\nfunction fee() external view returns (uint256);\n\nfunction terminalDirectory() external view returns (ITerminalDirectory);\n\nfunction migrationIsAllowed(ITerminal _terminal)\n    external\n    view\n    returns (bool);\n")))}s.isMDXComponent=!0}}]);