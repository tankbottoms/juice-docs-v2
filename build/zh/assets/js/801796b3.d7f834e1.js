"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[94697],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=r.createContext({}),c=function(e){var t=r.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=c(a),m=n,f=s["".concat(d,".").concat(m)]||s[m]||u[m]||l;return a?r.createElement(f,i(i({ref:t},p),{},{components:a})):r.createElement(f,i({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=s;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(67294),n=a(86010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(l,i),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>m});var r=a(87462),n=a(67294),l=a(86010),i=a(72389),o=a(67392),d=a(7094),c=a(12466);const p="tabList__CuJ",u="tabItem_LNqP";function s(e){var t,a;const{lazy:i,block:s,defaultValue:m,values:f,groupId:k,className:h}=e,b=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=f?f:b.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),N=(0,o.l)(y,((e,t)=>e.value===t.value));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const v=null===m?m:null!=(t=null!=m?m:null==(a=b.find((e=>e.props.default)))?void 0:a.props.value)?t:b[0].props.value;if(null!==v&&!y.some((e=>e.value===v)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+y.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:g,setTabGroupChoices:j}=(0,d.U)(),[T,_]=(0,n.useState)(v),w=[],{blockElementScrollPositionUntilNextRender:P}=(0,c.o5)();if(null!=k){const e=g[k];null!=e&&e!==T&&y.some((t=>t.value===e))&&_(e)}const C=e=>{const t=e.currentTarget,a=w.indexOf(t),r=y[a].value;r!==T&&(P(t),_(r),null!=k&&j(k,String(r)))},I=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var r;const t=w.indexOf(e.currentTarget)+1;a=null!=(r=w[t])?r:w[0];break}case"ArrowLeft":{var n;const t=w.indexOf(e.currentTarget)-1;a=null!=(n=w[t])?n:w[w.length-1];break}}null==(t=a)||t.focus()};return n.createElement("div",{className:(0,l.Z)("tabs-container",p)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":s},h)},y.map((e=>{let{value:t,label:a,attributes:i}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>w.push(e),onKeyDown:I,onFocus:C,onClick:C},i,{className:(0,l.Z)("tabs__item",u,null==i?void 0:i.className,{"tabs__item--active":T===t})}),null!=a?a:t)}))),i?(0,n.cloneElement)(b.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function m(e){const t=(0,i.Z)();return n.createElement(s,(0,r.Z)({key:String(t)},e))}},67826:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=a(87462),n=(a(67294),a(3905)),l=a(65488),i=a(85162);const o={},d="setDefaultValues",c={unversionedId:"dev/api/contracts/or-utilities/jbetherc20projectpayer/write/setdefaultvalues",id:"dev/api/contracts/or-utilities/jbetherc20projectpayer/write/setdefaultvalues",title:"setDefaultValues",description:"Contract: JBETHERC20ProjectPayer",source:"@site/docs/dev/api/contracts/or-utilities/jbetherc20projectpayer/write/setdefaultvalues.md",sourceDirName:"dev/api/contracts/or-utilities/jbetherc20projectpayer/write",slug:"/dev/api/contracts/or-utilities/jbetherc20projectpayer/write/setdefaultvalues",permalink:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/write/setdefaultvalues",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/api/contracts/or-utilities/jbetherc20projectpayer/write/setdefaultvalues.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"receive",permalink:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/write/receive"},next:{title:"JBETHERC20ProjectPayerDeployer",permalink:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayerdeployer/"}},p={},u=[{value:"Definition",id:"definition",level:4},{value:"Body",id:"body",level:4}],s={toc:u};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"setdefaultvalues"},"setDefaultValues"),(0,n.kt)("p",null,"Contract: ",(0,n.kt)("a",{parentName:"p",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/"},(0,n.kt)("inlineCode",{parentName:"a"},"JBETHERC20ProjectPayer"))),(0,n.kt)("p",null,"Interface: ",(0,n.kt)("a",{parentName:"p",href:"/zh/dev/api/interfaces/ijbprojectpayer"},(0,n.kt)("inlineCode",{parentName:"a"},"IJBProjectPayer"))),(0,n.kt)(l.Z,{mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"Step by step",label:"Step by step",mdxType:"TabItem"},(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Sets the default values that determine how to interact with a protocol treasury when this contract receives ETH directly.")),(0,n.kt)("h4",{id:"definition"},"Definition"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"function setDefaultValues(\n  uint256 _projectId,\n  address payable _beneficiary,\n  bool _preferClaimedTokens,\n  string memory _memo,\n  bytes memory _metadata,\n  bool _defaultPreferAddToBalance\n) external virtual override onlyOwner { ... }\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Arguments:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"_projectId")," is the ID of the project whose treasury should be forwarded this contract's received payments."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"_beneficiary")," is the address that'll receive the project's tokens. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"_preferClaimedTokens")," is a flag indicating whether issued tokens should be automatically claimed into the beneficiary's wallet. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"_memo")," is the memo that'll be used. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"_metadata")," is the metadata that'll be sent. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"_defaultPreferAddToBalance")," is a flag indicating if received payments should call the ",(0,n.kt)("inlineCode",{parentName:"li"},"pay")," function or the ",(0,n.kt)("inlineCode",{parentName:"li"},"addToBalance")," function of a project."))),(0,n.kt)("li",{parentName:"ul"},"Through the ",(0,n.kt)("a",{parentName:"li",href:"https://docs.openzeppelin.com/contracts/4.x/api/access#Ownable-onlyOwner--"},(0,n.kt)("inlineCode",{parentName:"a"},"onlyOwner"))," modifier, this function can only be accessed by the address that owns this contract."),(0,n.kt)("li",{parentName:"ul"},"The function can be overriden by inheriting contracts."),(0,n.kt)("li",{parentName:"ul"},"The function overrides a function definition from the ",(0,n.kt)("a",{parentName:"li",href:"/zh/dev/api/interfaces/ijbprojectpayer"},(0,n.kt)("inlineCode",{parentName:"a"},"IJBProjectPayer"))," interface."),(0,n.kt)("li",{parentName:"ul"},"The function doesn't return anything.")),(0,n.kt)("h4",{id:"body"},"Body"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Set the default project ID if it has changed."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"// Set the default project ID if it has changed.\nif (_projectId != defaultProjectId) defaultProjectId = _projectId;\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("em",{parentName:"p"},"Internal references:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/defaultprojectid"},(0,n.kt)("inlineCode",{parentName:"a"},"defaultProjectId"))))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Set the default beneficiary if it has changed."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"// Set the default beneficiary if it has changed.\nif (_beneficiary != defaultBeneficiary) defaultBeneficiary = _beneficiary;\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("em",{parentName:"p"},"Internal references:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/defaultbeneficiary"},(0,n.kt)("inlineCode",{parentName:"a"},"defaultBeneficiary"))))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Set the default claimed token preference if it has changed."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"// Set the default claimed token preference if it has changed.\nif (_preferClaimedTokens != defaultPreferClaimedTokens)\n  defaultPreferClaimedTokens = _preferClaimedTokens;\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("em",{parentName:"p"},"Internal references:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/defaultpreferclaimedtokens"},(0,n.kt)("inlineCode",{parentName:"a"},"defaultPreferClaimedTokens"))))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Set the default memo if it has changed."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"// Set the default memo if it has changed.\nif (keccak256(abi.encodePacked(_memo)) != keccak256(abi.encodePacked(defaultMemo)))\n  defaultMemo = _memo;\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("em",{parentName:"p"},"Internal references:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/defaultmemo"},(0,n.kt)("inlineCode",{parentName:"a"},"defaultMemo"))))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Set the default metadata if it has changed."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"// Set the default metadata if it has changed.\nif (keccak256(abi.encodePacked(_metadata)) != keccak256(abi.encodePacked(defaultMetadata)))\n  defaultMetadata = _metadata;\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("em",{parentName:"p"},"Internal references:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/defaultmetadata"},(0,n.kt)("inlineCode",{parentName:"a"},"defaultMetadata"))))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Set the default metadata if it has changed."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"// Set the add to balance preference if it has changed.\nif (_defaultPreferAddToBalance != defaultPreferAddToBalance)\n  defaultPreferAddToBalance = _defaultPreferAddToBalance;\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("em",{parentName:"p"},"Internal references:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/defaultpreferaddtobalance"},(0,n.kt)("inlineCode",{parentName:"a"},"defaultPreferAddToBalance"))))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Emit a ",(0,n.kt)("inlineCode",{parentName:"p"},"SetDefaultValues")," event with all relevant parameters."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"emit SetDefaultValues(\n  _projectId,\n  _beneficiary,\n  _preferClaimedTokens,\n  _memo,\n  _metadata,\n  _defaultPreferAddToBalance,\n  msg.sender\n);\n")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("em",{parentName:"p"},"Event references:")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/events/setdefaultvalues"},(0,n.kt)("inlineCode",{parentName:"a"},"SetDefaultValues"))))))),(0,n.kt)(i.Z,{value:"Code",label:"Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"/** \n  @notice \n  Sets the default values that determine how to interact with a protocol treasury when this contract receives ETH directly.\n\n  @param _projectId The ID of the project whose treasury should be forwarded this contract's received payments.\n  @param _beneficiary The address that'll receive the project's tokens. \n  @param _preferClaimedTokens A flag indicating whether issued tokens should be automatically claimed into the beneficiary's wallet. \n  @param _memo The memo that'll be used. \n  @param _metadata The metadata that'll be sent. \n  @param _defaultPreferAddToBalance A flag indicating if received payments should call the `pay` function or the `addToBalance` function of a project.\n*/\nfunction setDefaultValues(\n  uint256 _projectId,\n  address payable _beneficiary,\n  bool _preferClaimedTokens,\n  string memory _memo,\n  bytes memory _metadata,\n  bool _defaultPreferAddToBalance\n) external virtual override onlyOwner {\n  // Set the default project ID if it has changed.\n  if (_projectId != defaultProjectId) defaultProjectId = _projectId;\n\n  // Set the default beneficiary if it has changed.\n  if (_beneficiary != defaultBeneficiary) defaultBeneficiary = _beneficiary;\n\n  // Set the default claimed token preference if it has changed.\n  if (_preferClaimedTokens != defaultPreferClaimedTokens)\n    defaultPreferClaimedTokens = _preferClaimedTokens;\n\n  // Set the default memo if it has changed.\n  if (keccak256(abi.encodePacked(_memo)) != keccak256(abi.encodePacked(defaultMemo)))\n    defaultMemo = _memo;\n\n  // Set the default metadata if it has changed.\n  if (keccak256(abi.encodePacked(_metadata)) != keccak256(abi.encodePacked(defaultMetadata)))\n    defaultMetadata = _metadata;\n\n  // Set the add to balance preference if it has changed.\n  if (_defaultPreferAddToBalance != defaultPreferAddToBalance)\n    defaultPreferAddToBalance = _defaultPreferAddToBalance;\n\n  emit SetDefaultValues(\n    _projectId,\n    _beneficiary,\n    _preferClaimedTokens,\n    _memo,\n    _metadata,\n    _defaultPreferAddToBalance,\n    msg.sender\n  );\n}\n"))),(0,n.kt)(i.Z,{value:"Events",label:"Events",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Data"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/events/setdefaultvalues"},(0,n.kt)("strong",{parentName:"a"},(0,n.kt)("inlineCode",{parentName:"strong"},"SetDefaultValues")))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("ul",null,(0,n.kt)("li",null,(0,n.kt)("code",null,"uint256 indexed projectId")),(0,n.kt)("li",null,(0,n.kt)("code",null,"address beneficiary")),(0,n.kt)("li",null,(0,n.kt)("code",null,"bool preferClaimedTokens")),(0,n.kt)("li",null,(0,n.kt)("code",null,"string memo")),(0,n.kt)("li",null,(0,n.kt)("code",null,"bytes metadata")),(0,n.kt)("li",null,(0,n.kt)("code",null,"bool preferAddToBalance")),(0,n.kt)("li",null,(0,n.kt)("code",null,"address caller")))))))),(0,n.kt)(i.Z,{value:"Bug bounty",label:"Bug bounty",mdxType:"TabItem"},(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Category"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"),(0,n.kt)("th",{parentName:"tr",align:null},"Reward"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Optimization")),(0,n.kt)("td",{parentName:"tr",align:null},"Help make this operation more efficient."),(0,n.kt)("td",{parentName:"tr",align:null},"0.5ETH")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Low severity")),(0,n.kt)("td",{parentName:"tr",align:null},"Identify a vulnerability in this operation that could lead to an inconvenience for a user of the protocol or for a protocol developer."),(0,n.kt)("td",{parentName:"tr",align:null},"1ETH")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"High severity")),(0,n.kt)("td",{parentName:"tr",align:null},"Identify a vulnerability in this operation that could lead to data corruption or loss of funds."),(0,n.kt)("td",{parentName:"tr",align:null},"5+ETH")))))))}m.isMDXComponent=!0}}]);