"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[29593],{3905:(t,e,o)=>{o.d(e,{Zo:()=>p,kt:()=>m});var r=o(67294);function n(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function c(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,r)}return o}function i(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?c(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):c(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function a(t,e){if(null==t)return{};var o,r,n=function(t,e){if(null==t)return{};var o,r,n={},c=Object.keys(t);for(r=0;r<c.length;r++)o=c[r],e.indexOf(o)>=0||(n[o]=t[o]);return n}(t,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(r=0;r<c.length;r++)o=c[r],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(n[o]=t[o])}return n}var d=r.createContext({}),u=function(t){var e=r.useContext(d),o=e;return t&&(o="function"==typeof t?t(e):i(i({},e),t)),o},p=function(t){var e=u(t.components);return r.createElement(d.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},l=r.forwardRef((function(t,e){var o=t.components,n=t.mdxType,c=t.originalType,d=t.parentName,p=a(t,["components","mdxType","originalType","parentName"]),l=u(o),m=n,f=l["".concat(d,".").concat(m)]||l[m]||s[m]||c;return o?r.createElement(f,i(i({ref:e},p),{},{components:o})):r.createElement(f,i({ref:e},p))}));function m(t,e){var o=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var c=o.length,i=new Array(c);i[0]=l;var a={};for(var d in e)hasOwnProperty.call(e,d)&&(a[d]=e[d]);a.originalType=t,a.mdxType="string"==typeof t?t:n,i[1]=a;for(var u=2;u<c;u++)i[u]=o[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}l.displayName="MDXCreateElement"},49991:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>s,frontMatter:()=>c,metadata:()=>a,toc:()=>u});var r=o(87462),n=(o(67294),o(3905));const c={sidebar_position:3},i="Mods",a={unversionedId:"dev/protocol-v1/mods",id:"dev/protocol-v1/mods",title:"Mods",description:"@notice Stores mods for each project.",source:"@site/docs/dev/protocol-v1/mods.md",sourceDirName:"dev/protocol-v1",slug:"/dev/protocol-v1/mods",permalink:"/zh/dev/protocol-v1/mods",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/protocol-v1/mods.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"dev",previous:{title:"TerminalDirectory",permalink:"/zh/dev/protocol-v1/terminal-directory"},next:{title:"TerminalV1",permalink:"/zh/dev/protocol-v1/terminalv1/"}},d={},u=[{value:"<code>payoutModsOf(uint256 _projectId, uint256 _configuration) \u2192 struct PayoutMod[]</code> (external)",id:"payoutmodsofuint256-_projectid-uint256-_configuration--struct-payoutmod-external",level:2},{value:"<code>ticketModsOf(uint256 _projectId, uint256 _configuration) \u2192 struct TicketMod[]</code> (external)",id:"ticketmodsofuint256-_projectid-uint256-_configuration--struct-ticketmod-external",level:2},{value:"<code>constructor(contract IProjects _projects, contract IOperatorStore _operatorStore, contract ITerminalDirectory _terminalDirectory)</code> (public)",id:"constructorcontract-iprojects-_projects-contract-ioperatorstore-_operatorstore-contract-iterminaldirectory-_terminaldirectory-public",level:2},{value:"<code>setPayoutMods(uint256 _projectId, uint256 _configuration, struct PayoutMod[] _mods)</code> (external)",id:"setpayoutmodsuint256-_projectid-uint256-_configuration-struct-payoutmod-_mods-external",level:2},{value:"<code>setTicketMods(uint256 _projectId, uint256 _configuration, struct TicketMod[] _mods)</code> (external)",id:"setticketmodsuint256-_projectid-uint256-_configuration-struct-ticketmod-_mods-external",level:2}],p={toc:u};function s(t){let{components:e,...o}=t;return(0,n.kt)("wrapper",(0,r.Z)({},p,o,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"mods"},"Mods"),(0,n.kt)("p",null,"@notice Stores mods for each project."),(0,n.kt)("p",null,"@dev Mods can be used to distribute a percentage of payments or tickets to preconfigured beneficiaries."),(0,n.kt)("h2",{id:"payoutmodsofuint256-_projectid-uint256-_configuration--struct-payoutmod-external"},(0,n.kt)("inlineCode",{parentName:"h2"},"payoutModsOf(uint256 _projectId, uint256 _configuration) \u2192 struct PayoutMod[]")," (external)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"  Get all payout mods for the specified project ID.\n\n  @param _projectId The ID of the project to get mods for.\n  @param _configuration The configuration to get mods for.\n\n  @return An array of all mods for the project.\n")),(0,n.kt)("h2",{id:"ticketmodsofuint256-_projectid-uint256-_configuration--struct-ticketmod-external"},(0,n.kt)("inlineCode",{parentName:"h2"},"ticketModsOf(uint256 _projectId, uint256 _configuration) \u2192 struct TicketMod[]")," (external)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"  Get all ticket mods for the specified project ID.\n\n  @param _projectId The ID of the project to get mods for.\n  @param _configuration The configuration to get mods for.\n\n  @return An array of all mods for the project.\n")),(0,n.kt)("h2",{id:"constructorcontract-iprojects-_projects-contract-ioperatorstore-_operatorstore-contract-iterminaldirectory-_terminaldirectory-public"},(0,n.kt)("inlineCode",{parentName:"h2"},"constructor(contract IProjects _projects, contract IOperatorStore _operatorStore, contract ITerminalDirectory _terminalDirectory)")," (public)"),(0,n.kt)("h2",{id:"setpayoutmodsuint256-_projectid-uint256-_configuration-struct-payoutmod-_mods-external"},(0,n.kt)("inlineCode",{parentName:"h2"},"setPayoutMods(uint256 _projectId, uint256 _configuration, struct PayoutMod[] _mods)")," (external)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"  Adds a mod to the payout mods list.\n\n  @dev\n  Only the owner or operator of a project can make this call, or the current terminal of the project.\n\n  @param _projectId The project to add a mod to.\n  @param _configuration The configuration to set the mods to be active during.\n  @param _mods The payout mods to set.\n")),(0,n.kt)("h2",{id:"setticketmodsuint256-_projectid-uint256-_configuration-struct-ticketmod-_mods-external"},(0,n.kt)("inlineCode",{parentName:"h2"},"setTicketMods(uint256 _projectId, uint256 _configuration, struct TicketMod[] _mods)")," (external)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"  Adds a mod to the ticket mods list.\n\n  @dev\n  Only the owner or operator of a project can make this call, or the current terminal of the project.\n\n  @param _projectId The project to add a mod to.\n  @param _configuration The configuration to set the mods to be active during.\n  @param _mods The ticket mods to set.\n")))}s.isMDXComponent=!0}}]);