"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[50873],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>k});var a=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var d=a.createContext({}),u=function(t){var e=a.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=u(t.components);return a.createElement(d.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,d=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),s=u(n),k=l,m=s["".concat(d,".").concat(k)]||s[k]||p[k]||r;return n?a.createElement(m,o(o({ref:e},c),{},{components:n})):a.createElement(m,o({ref:e},c))}));function k(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,o=new Array(r);o[0]=s;var i={};for(var d in e)hasOwnProperty.call(e,d)&&(i[d]=e[d]);i.originalType=t,i.mdxType="string"==typeof t?t:l,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},88333:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=n(87462),l=(n(67294),n(3905));const r={},o="JBETHERC20ProjectPayer",i={unversionedId:"dev/api/contracts/or-utilities/jbetherc20projectpayer/README",id:"dev/api/contracts/or-utilities/jbetherc20projectpayer/README",title:"JBETHERC20ProjectPayer",description:"Sends ETH or ERC20's to a project treasury as it receives direct payments or has it's functions called.",source:"@site/docs/dev/api/contracts/or-utilities/jbetherc20projectpayer/README.md",sourceDirName:"dev/api/contracts/or-utilities/jbetherc20projectpayer",slug:"/dev/api/contracts/or-utilities/jbetherc20projectpayer/",permalink:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/api/contracts/or-utilities/jbetherc20projectpayer/README.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"settokenuriresolver",permalink:"/zh/dev/api/contracts/or-delegates/or-abstract/jbnftrewarddelegate/write/settokenuriresolver"},next:{title:"SetDefaultValues",permalink:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/events/setdefaultvalues"}},d={},u=[{value:"Code",id:"code",level:4},{value:"Addresses",id:"addresses",level:4},{value:"Interfaces",id:"interfaces",level:4},{value:"Inheritance",id:"inheritance",level:4},{value:"Constructor",id:"constructor",level:4},{value:"Events",id:"events",level:4},{value:"Properties",id:"properties",level:4},{value:"Read",id:"read",level:4},{value:"Write",id:"write",level:4}],c={toc:u};function p(t){let{components:e,...n}=t;return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"jbetherc20projectpayer"},"JBETHERC20ProjectPayer"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Sends ETH or ERC20's to a project treasury as it receives direct payments or has it's functions called.")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Inherit from this contract or borrow from its logic to forward ETH or ERC20's to project treasuries from within other contracts.")),(0,l.kt)("h4",{id:"code"},"Code"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jbx-protocol/juice-contracts-v2/blob/main/contracts/JBETHERC20ProjectPayer.sol"},"https://github.com/jbx-protocol/juice-contracts-v2/blob/main/contracts/JBETHERC20ProjectPayer.sol")),(0,l.kt)("h4",{id:"addresses"},"Addresses"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"There can be several instances of this contract deployed.")),(0,l.kt)("h4",{id:"interfaces"},"Interfaces"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/interfaces/ijbprojectpayer"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"IJBProjectPayer")))),(0,l.kt)("td",{parentName:"tr",align:null},"General interface for the methods in this contract that interact with the blockchain's state according to the protocol's rules.")))),(0,l.kt)("h4",{id:"inheritance"},"Inheritance"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Contract"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://docs.openzeppelin.com/contracts/4.x/api/access#Ownable"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"Ownable")))),(0,l.kt)("td",{parentName:"tr",align:null},"Includes convenience functionality for specifying an address that owns the contract, with modifiers that only allow access by the owner.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://docs.openzeppelin.com/contracts/4.x/api/utils#ERC165"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"ERC165")))),(0,l.kt)("td",{parentName:"tr",align:null},"Introspection on interface adherance.")))),(0,l.kt)("h4",{id:"constructor"},"Constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"/** \n  @param _defaultProjectId The ID of the project whose treasury should be forwarded this contract's received payments.\n  @param _defaultBeneficiary The address that'll receive the project's tokens. \n  @param _defaultPreferClaimedTokens A flag indicating whether issued tokens should be automatically claimed into the beneficiary's wallet. \n  @param _defaultMemo A memo to pass along to the emitted event, and passed along the the funding cycle's data source and delegate.  A data source can alter the memo before emitting in the event and forwarding to the delegate.\n  @param _defaultMetadata Bytes to send along to the project's data source and delegate, if provided.\n  @param _defaultPreferAddToBalance A flag indicating if received payments should call the `pay` function or the `addToBalance` function of a project.\n  @param _directory A contract storing directories of terminals and controllers for each project.\n  @param _owner The address that will own the contract.\n*/\nconstructor(\n  uint256 _defaultProjectId,\n  address payable _defaultBeneficiary,\n  bool _defaultPreferClaimedTokens,\n  string memory _defaultMemo,\n  bytes memory _defaultMetadata,\n  bool _defaultPreferAddToBalance,\n  IJBDirectory _directory,\n  address _owner\n) {\n  defaultProjectId = _defaultProjectId;\n  defaultBeneficiary = _defaultBeneficiary;\n  defaultPreferClaimedTokens = _defaultPreferClaimedTokens;\n  defaultMemo = _defaultMemo;\n  defaultMetadata = _defaultMetadata;\n  defaultPreferAddToBalance = _defaultPreferAddToBalance;\n  directory = _directory;\n\n  _transferOwnership(_owner);\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultProjectId")," is the ID of the project whose treasury should be forwarded this contract's received payments."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultBeneficiary")," is the address that'll receive the project's tokens."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultPreferClaimedTokens")," is a flag indicating whether issued tokens should be automatically claimed into the beneficiary's wallet."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultMemo")," is the memo that'll be passed along to the emitted event.."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultMetadata")," are bytes to send along to the project's data source and delegate, if provided."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_defaultPreferAddToBalance")," is a flag indicating if received payments should call the ",(0,l.kt)("inlineCode",{parentName:"li"},"pay")," function or the ",(0,l.kt)("inlineCode",{parentName:"li"},"addToBalance")," function of a project."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_directory")," is a contract storing directories of terminals and controllers for each project."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_owner")," is the address that will own the contract.")),(0,l.kt)("h4",{id:"events"},"Events"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Data"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/events/setdefaultvalues"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"SetDefaultValues")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 indexed projectId")),(0,l.kt)("li",null,(0,l.kt)("code",null,"address indexed beneficiary")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bool preferClaimedTokens")),(0,l.kt)("li",null,(0,l.kt)("code",null,"string memo")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bytes metadata")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bool preferAddToBalance")),(0,l.kt)("li",null,(0,l.kt)("code",null,"address caller"))))))),(0,l.kt)("h4",{id:"properties"},"Properties"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/directory"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"directory")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Returns")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,(0,l.kt)("a",{parentName:"td",href:"/dev/api/contracts/jbdirectory"},"JBDirectory")))))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/defaultprojectid"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"defaultProjectId")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Returns")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256"))))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/defaultbeneficiary"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"defaultBeneficiary")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Returns")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"address"))))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/defaultpreferclaimedtokens"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"defaultPreferClaimedTokens")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Returns")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"bool"))))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/defaultmemo"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"defaultMemo")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Returns")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"string"))))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/defaultmetadata"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"defaultMetadata")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Returns")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"bytes"))))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/properties/defaultpreferaddtobalance"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"defaultPreferAddToBalance")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Returns")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"bool"))))))),(0,l.kt)("h4",{id:"read"},"Read"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Function"),(0,l.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/read/supportsinterface"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"supportsInterface")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Params")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _interfaceId"))),(0,l.kt)("p",null,(0,l.kt)("strong",null,"Returns")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"bool"))))))),(0,l.kt)("h4",{id:"write"},"Write"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Function"),(0,l.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/write/pay"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"receive")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Traits")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"payable")),(0,l.kt)("li",null,(0,l.kt)("code",null,"virtual"))))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/write/setdefaultvalues"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"setDefaultValues")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Traits")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,(0,l.kt)("a",{parentName:"td",href:"https://docs.openzeppelin.com/contracts/4.x/api/access#Ownable-onlyOwner--"},"onlyOwner"))),(0,l.kt)("li",null,(0,l.kt)("code",null,"virtual"))),(0,l.kt)("p",null,(0,l.kt)("strong",null,"Params")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _projectId")),(0,l.kt)("li",null,(0,l.kt)("code",null,"address payable _beneficiary")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bool _preferClaimedTokens")),(0,l.kt)("li",null,(0,l.kt)("code",null,"string _memo")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bytes _metadata"))))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/write/pay"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"pay")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Traits")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"payable")),(0,l.kt)("li",null,(0,l.kt)("code",null,"virtual"))),(0,l.kt)("p",null,(0,l.kt)("strong",null,"Params")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _projectId")),(0,l.kt)("li",null,(0,l.kt)("code",null,"address _token")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _amount")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _decimals")),(0,l.kt)("li",null,(0,l.kt)("code",null,"address _beneficiary")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _minReturnedTokens")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bool _preferClaimedTokens")),(0,l.kt)("li",null,(0,l.kt)("code",null,"string _memo")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bytes _metadata"))))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/write/addtobalanceof"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"addToBalanceOf")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Traits")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"payable")),(0,l.kt)("li",null,(0,l.kt)("code",null,"virtual"))),(0,l.kt)("p",null,(0,l.kt)("strong",null,"Params")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _projectId")),(0,l.kt)("li",null,(0,l.kt)("code",null,"address _token")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _amount")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _decimals")),(0,l.kt)("li",null,(0,l.kt)("code",null,"string _memo")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bytes _metadata"))))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/write/-_pay"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"_pay")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Traits")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"internal")),(0,l.kt)("li",null,(0,l.kt)("code",null,"virtual"))),(0,l.kt)("p",null,(0,l.kt)("strong",null,"Params")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _projectId")),(0,l.kt)("li",null,(0,l.kt)("code",null,"address _token")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _amount")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _decimals")),(0,l.kt)("li",null,(0,l.kt)("code",null,"address _beneficiary")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _minReturnedTokens")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bool _preferClaimedTokens")),(0,l.kt)("li",null,(0,l.kt)("code",null,"string _memo")),(0,l.kt)("li",null,(0,l.kt)("code",null,"bytes _metadata"))))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-utilities/jbetherc20projectpayer/write/-_addtobalanceof"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"_addToBalanceOf")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,(0,l.kt)("strong",null,"Traits")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"internal")),(0,l.kt)("li",null,(0,l.kt)("code",null,"virtual"))),(0,l.kt)("p",null,(0,l.kt)("strong",null,"Params")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _projectId")),(0,l.kt)("li",null,(0,l.kt)("code",null,"address _token")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _amount")),(0,l.kt)("li",null,(0,l.kt)("code",null,"uint256 _decimals")),(0,l.kt)("li",null,(0,l.kt)("code",null,"string _memo"))))))))}p.isMDXComponent=!0}}]);