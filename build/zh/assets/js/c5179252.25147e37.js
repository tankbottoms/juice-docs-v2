"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[47589],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>p});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},m=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=u(t),p=i,f=d["".concat(c,".").concat(p)]||d[p]||s[p]||o;return t?r.createElement(f,a(a({ref:n},m),{},{components:t})):r.createElement(f,a({ref:n},m))}));function p(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},88437:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=t(87462),i=(t(67294),t(3905));const o={},a="IJBPaymentTerminal",l={unversionedId:"dev/api/interfaces/ijbsingletokenpaymentterminalstore",id:"dev/api/interfaces/ijbsingletokenpaymentterminalstore",title:"IJBPaymentTerminal",description:"Code",source:"@site/docs/dev/api/interfaces/ijbsingletokenpaymentterminalstore.md",sourceDirName:"dev/api/interfaces",slug:"/dev/api/interfaces/ijbsingletokenpaymentterminalstore",permalink:"/zh/dev/api/interfaces/ijbsingletokenpaymentterminalstore",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/api/interfaces/ijbsingletokenpaymentterminalstore.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"IJBSingleTokenPaymentTerminal",permalink:"/zh/dev/api/interfaces/ijbsingletokenpaymentterminal"},next:{title:"IJBSplitAllocator",permalink:"/zh/dev/api/interfaces/ijbsplitallocator"}},c={},u=[{value:"Code",id:"code",level:4},{value:"Definition",id:"definition",level:4}],m={toc:u};function s(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ijbpaymentterminal"},"IJBPaymentTerminal"),(0,i.kt)("h4",{id:"code"},"Code"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jbx-protocol/juice-contracts-v2/blob/main/contracts/interfaces/IJBSingleTokenPaymentTerminalStore.sol"},"https://github.com/jbx-protocol/juice-contracts-v2/blob/main/contracts/interfaces/IJBSingleTokenPaymentTerminalStore.sol")),(0,i.kt)("h4",{id:"definition"},"Definition"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"interface IJBSingleTokenPaymentTerminalStore {\n  function fundingCycleStore() external view returns (IJBFundingCycleStore);\n\n  function directory() external view returns (IJBDirectory);\n\n  function prices() external view returns (IJBPrices);\n\n  function balanceOf(IJBSingleTokenPaymentTerminal _terminal, uint256 _projectId)\n    external\n    view\n    returns (uint256);\n\n  function usedDistributionLimitOf(\n    IJBSingleTokenPaymentTerminal _terminal,\n    uint256 _projectId,\n    uint256 _fundingCycleNumber\n  ) external view returns (uint256);\n\n  function usedOverflowAllowanceOf(\n    IJBSingleTokenPaymentTerminal _terminal,\n    uint256 _projectId,\n    uint256 _fundingCycleConfiguration\n  ) external view returns (uint256);\n\n  function currentOverflowOf(IJBSingleTokenPaymentTerminal _terminal, uint256 _projectId)\n    external\n    view\n    returns (uint256);\n\n  function currentTotalOverflowOf(\n    uint256 _projectId,\n    uint256 _decimals,\n    uint256 _currency\n  ) external view returns (uint256);\n\n  function currentReclaimableOverflowOf(\n    IJBSingleTokenPaymentTerminal _terminal,\n    uint256 _projectId,\n    uint256 _tokenCount,\n    bool _useTotalOverflow\n  ) external view returns (uint256);\n\n  function currentReclaimableOverflowOf(\n    uint256 _projectId,\n    uint256 _tokenCount,\n    uint256 _totalSupply,\n    uint256 _overflow\n  ) external view returns (uint256);\n\n  function recordPaymentFrom(\n    address _payer,\n    JBTokenAmount memory _amount,\n    uint256 _projectId,\n    uint256 _baseWeightCurrency,\n    address _beneficiary,\n    string calldata _memo,\n    bytes memory _metadata\n  )\n    external\n    returns (\n      JBFundingCycle memory fundingCycle,\n      uint256 tokenCount,\n      IJBPayDelegate delegate,\n      string memory memo\n    );\n\n  function recordRedemptionFor(\n    address _holder,\n    uint256 _projectId,\n    uint256 _tokenCount,\n    string calldata _memo,\n    bytes calldata _metadata\n  )\n    external\n    returns (\n      JBFundingCycle memory fundingCycle,\n      uint256 reclaimAmount,\n      IJBRedemptionDelegate delegate,\n      string memory memo\n    );\n\n  function recordDistributionFor(\n    uint256 _projectId,\n    uint256 _amount,\n    uint256 _currency,\n  ) external returns (JBFundingCycle memory fundingCycle, uint256 distributedAmount);\n\n  function recordUsedAllowanceOf(\n    uint256 _projectId,\n    uint256 _amount,\n    uint256 _currency,\n  ) external returns (JBFundingCycle memory fundingCycle, uint256 withdrawnAmount);\n\n  function recordAddedBalanceFor(uint256 _projectId, uint256 _amount) external;\n\n  function recordMigration(uint256 _projectId) external returns (uint256 balance);\n}\n")))}s.isMDXComponent=!0}}]);