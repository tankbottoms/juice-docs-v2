"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[60550],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,u=d["".concat(p,".").concat(m)]||d[m]||k[m]||o;return n?r.createElement(u,l(l({ref:t},c),{},{components:n})):r.createElement(u,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(67294),a=n(86010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(87462),a=n(67294),o=n(86010),l=n(72389),i=n(67392),p=n(7094),s=n(12466);const c="tabList__CuJ",k="tabItem_LNqP";function d(e){var t,n;const{lazy:l,block:d,defaultValue:m,values:u,groupId:h,className:f}=e,N=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=u?u:N.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),v=(0,i.l)(b,((e,t)=>e.value===t.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const g=null===m?m:null!=(t=null!=m?m:null==(n=N.find((e=>e.props.default)))?void 0:n.props.value)?t:N[0].props.value;if(null!==g&&!b.some((e=>e.value===g)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:j,setTabGroupChoices:w}=(0,p.U)(),[y,T]=(0,a.useState)(g),_=[],{blockElementScrollPositionUntilNextRender:I}=(0,s.o5)();if(null!=h){const e=j[h];null!=e&&e!==y&&b.some((t=>t.value===e))&&T(e)}const O=e=>{const t=e.currentTarget,n=_.indexOf(t),r=b[n].value;r!==y&&(I(t),T(r),null!=h&&w(h,String(r)))},E=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var r;const t=_.indexOf(e.currentTarget)+1;n=null!=(r=_[t])?r:_[0];break}case"ArrowLeft":{var a;const t=_.indexOf(e.currentTarget)-1;n=null!=(a=_[t])?a:_[_.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},f)},b.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>_.push(e),onKeyDown:E,onFocus:O,onClick:O},l,{className:(0,o.Z)("tabs__item",k,null==l?void 0:l.className,{"tabs__item--active":y===t})}),null!=n?n:t)}))),l?(0,a.cloneElement)(N.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},N.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function m(e){const t=(0,l.Z)();return a.createElement(d,(0,r.Z)({key:String(t)},e))}},43596:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>k});var r=n(87462),a=(n(67294),n(3905)),o=n(65488),l=n(85162);const i={},p="changeFor",s={unversionedId:"dev/api/contracts/jbtokenstore/write/changefor",id:"dev/api/contracts/jbtokenstore/write/changefor",title:"changeFor",description:"Contract: JBTokenStore\u200b\u200c",source:"@site/docs/dev/api/contracts/jbtokenstore/write/changefor.md",sourceDirName:"dev/api/contracts/jbtokenstore/write",slug:"/dev/api/contracts/jbtokenstore/write/changefor",permalink:"/zh/dev/api/contracts/jbtokenstore/write/changefor",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/api/contracts/jbtokenstore/write/changefor.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"burnFrom",permalink:"/zh/dev/api/contracts/jbtokenstore/write/burnfrom"},next:{title:"claimFor",permalink:"/zh/dev/api/contracts/jbtokenstore/write/claimfor"}},c={},k=[{value:"Definition",id:"definition",level:4},{value:"Body",id:"body",level:4}],d={toc:k};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"changefor"},"changeFor"),(0,a.kt)("p",null,"Contract: ",(0,a.kt)("a",{parentName:"p",href:"/zh/dev/api/contracts/jbtokenstore/"},(0,a.kt)("inlineCode",{parentName:"a"},"JBTokenStore")),"\u200b\u200c"),(0,a.kt)("p",null,"Interface: ",(0,a.kt)("a",{parentName:"p",href:"/zh/dev/api/interfaces/ijbtokenstore"},(0,a.kt)("inlineCode",{parentName:"a"},"IJBTokenStore"))),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"Step by step",label:"Step by step",mdxType:"TabItem"},(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Swap the current project's token for another, and transfer ownership of the current token to another address if needed.")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Only a project's current controller can change its token.")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"This contract must have access to all of the token's ",(0,a.kt)("a",{parentName:"em",href:"/zh/dev/api/interfaces/ijbtoken"},(0,a.kt)("inlineCode",{parentName:"a"},"IJBToken"))," interface functions.")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Can't change to a token that's currently being used by another project.")),(0,a.kt)("h4",{id:"definition"},"Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"function changeFor(\n  uint256 _projectId,\n  IJBToken _token,\n  address _newOwner\n) external override onlyController(_projectId) { ... }\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Arguments:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_projectId")," is the ID of the project to which the changed token belongs."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_token")," is the new token. Send an empty address to remove the project's current token without adding a new one, if claiming tokens isn't currency required by the project"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_newOwner")," is an address to transfer the current token's ownership to. This is optional, but it cannot be done later."))),(0,a.kt)("li",{parentName:"ul"},"Through the ",(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/or-abstract/jbcontrollerutility/modifiers/onlycontroller"},(0,a.kt)("inlineCode",{parentName:"a"},"onlyController"))," modifier, the function can only be accessed by the controller of the ",(0,a.kt)("inlineCode",{parentName:"li"},"_projectId"),"."),(0,a.kt)("li",{parentName:"ul"},"The function overrides a function definition from the ",(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/interfaces/ijbtokenstore"},(0,a.kt)("inlineCode",{parentName:"a"},"IJBTokenStore"))," interface."),(0,a.kt)("li",{parentName:"ul"},"The function doesn't return anything.")),(0,a.kt)("h4",{id:"body"},"Body"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Make sure claiming isn't required if removing the token."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"// Can't remove the project's token if the project requires claiming tokens.\nif (_token == IJBToken(address(0)) && requireClaimFor[_projectId])\n  revert CANT_REMOVE_TOKEN_IF_ITS_REQUIRED();\n")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("em",{parentName:"p"},"Internal references:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/jbtokenstore/properties/requireclaimfor"},(0,a.kt)("inlineCode",{parentName:"a"},"requireClaimFor"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Make sure the token being changed to isn't being used by another project."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"// Can't change to a token already in use.\nif (projectOf[_token] != 0) revert TOKEN_ALREADY_IN_USE();\n")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("em",{parentName:"p"},"Internal references:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/jbtokenstore/properties/projectof"},(0,a.kt)("inlineCode",{parentName:"a"},"projectOf"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Make sure the token has 18 decimals."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"// Can't change to a token that doesn't use 18 decimals.\nif (_token != IJBToken(address(0)) && _token.decimals() != 18) \n  revert TOKENS_MUST_HAVE_18_DECIMALS();\n")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("em",{parentName:"p"},"External references:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/interfaces/ijbtoken"},(0,a.kt)("inlineCode",{parentName:"a"},"decimals"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Get a reference to the project's current token."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"// Get a reference to the current token for the project.\noldToken = tokenOf[_projectId];\n")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("em",{parentName:"p"},"Internal references:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/jbtokenstore/properties/tokenof"},(0,a.kt)("inlineCode",{parentName:"a"},"tokenOf"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Store the provided token as the token of the project."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"// Store the new token.\ntokenOf[_projectId] = _token;\n")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("em",{parentName:"p"},"Internal references:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/jbtokenstore/properties/tokenof"},(0,a.kt)("inlineCode",{parentName:"a"},"tokenOf"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Store the project the new token is being used for."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"// Store the project for the new token.\nif (_token != IJBToken(address(0)))\n  projectOf[_token] = _projectId;\n")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("em",{parentName:"p"},"Internal references:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/jbtokenstore/properties/projectof"},(0,a.kt)("inlineCode",{parentName:"a"},"projectOf"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Reset the project for the project's old token."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"// Reset the project for the old token.\nprojectOf[oldToken] = 0;\n")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("em",{parentName:"p"},"Internal references:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/jbtokenstore/properties/projectof"},(0,a.kt)("inlineCode",{parentName:"a"},"projectOf"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"If there's a current token and a new owner address was provided, transfer the ownership of the current token from this contract to the new owner."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"// If there's a current token and a new owner was provided, transfer ownership of the old token to the new owner.\nif (_newOwner != address(0) && oldToken != IJBToken(address(0)))\n  oldToken.transferOwnership(_projectId, _newOwner);\n")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("em",{parentName:"p"},"External references:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/jbtoken/write/transferownership"},(0,a.kt)("inlineCode",{parentName:"a"},"transferOwnership"))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Emit a ",(0,a.kt)("inlineCode",{parentName:"p"},"Change")," event with the relevant parameters."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"emit Change(_projectId, _token, oldToken, _newOwner, msg.sender);\n")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("em",{parentName:"p"},"Event references:")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/contracts/jbtokenstore/events/change"},(0,a.kt)("inlineCode",{parentName:"a"},"Change"))))))),(0,a.kt)(l.Z,{value:"Code",label:"Code",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/**\n  @notice\n  Swap the current project's token for another, and transfer ownership of the current token to another address if needed.\n\n  @dev\n  Only a project's current controller can change its token.\n\n  @dev\n  This contract must have access to all of the token's `IJBToken` interface functions.\n\n  @dev\n  Can't change to a token that's currently being used by another project.\n\n  @param _projectId The ID of the project to which the changed token belongs.\n  @param _token The new token. Send an empty address to remove the project's current token without adding a new one, if claiming tokens isn't currency required by the project.\n  @param _newOwner An address to transfer the current token's ownership to. This is optional, but it cannot be done later.\n\n  @return oldToken The token that was removed as the project's token.\n*/\nfunction changeFor(\n  uint256 _projectId,\n  IJBToken _token,\n  address _newOwner\n) external override onlyController(_projectId) returns (IJBToken oldToken) {\n  // Can't remove the project's token if the project requires claiming tokens.\n  if (_token == IJBToken(address(0)) && requireClaimFor[_projectId])\n    revert CANT_REMOVE_TOKEN_IF_ITS_REQUIRED();\n\n  // Can't change to a token already in use.\n  if (projectOf[_token] != 0) revert TOKEN_ALREADY_IN_USE();\n\n  // Can't change to a token that doesn't use 18 decimals.\n  if (_token != IJBToken(address(0)) && _token.decimals() != 18) \n    revert TOKENS_MUST_HAVE_18_DECIMALS();\n\n  // Get a reference to the current token for the project.\n  oldToken = tokenOf[_projectId];\n\n  // Store the new token.\n  tokenOf[_projectId] = _token;\n\n  // Store the project for the new token.\n  if (_token != IJBToken(address(0)))\n    projectOf[_token] = _projectId;\n\n  // Reset the project for the old token.\n  projectOf[oldToken] = 0;\n\n  // If there's a current token and a new owner was provided, transfer ownership of the old token to the new owner.\n  if (_newOwner != address(0) && oldToken != IJBToken(address(0)))\n    oldToken.transferOwnership(_projectId, _newOwner);\n\n  emit Change(_projectId, _token, oldToken, _newOwner, msg.sender);\n}\n"))),(0,a.kt)(l.Z,{value:"Errors",label:"Errors",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"String"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("inlineCode",{parentName:"strong"},"CANT_REMOVE_TOKEN_IF_ITS_REQUIRED"))),(0,a.kt)("td",{parentName:"tr",align:null},"Thrown if the token is being removed but claiming is required.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("inlineCode",{parentName:"strong"},"TOKEN_ALREADY_IN_USE"))),(0,a.kt)("td",{parentName:"tr",align:null},"Thrown if the token being attached is already being used by another project.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("inlineCode",{parentName:"strong"},"TOKENS_MUST_HAVE_18_DECIMALS"))),(0,a.kt)("td",{parentName:"tr",align:null},"Thrown if the token being attached doesn't use 18 decimals."))))),(0,a.kt)(l.Z,{value:"Events",label:"Events",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Data"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/jbtokenstore/events/change"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"Change")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 indexed projectId")),(0,a.kt)("li",null,(0,a.kt)("code",null,(0,a.kt)("a",{parentName:"td",href:"/zh/dev/api/interfaces/ijbtoken"},"IJBToken"),"indexed newToken")),(0,a.kt)("li",null,(0,a.kt)("code",null,(0,a.kt)("a",{parentName:"td",href:"/zh/dev/api/interfaces/ijbtoken"},"IJBToken"),"indexed oldToken")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address indexed owner")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address caller")))))))),(0,a.kt)(l.Z,{value:"Bug bounty",label:"Bug bounty",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Category"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Reward"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Optimization")),(0,a.kt)("td",{parentName:"tr",align:null},"Help make this operation more efficient."),(0,a.kt)("td",{parentName:"tr",align:null},"0.5ETH")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Low severity")),(0,a.kt)("td",{parentName:"tr",align:null},"Identify a vulnerability in this operation that could lead to an inconvenience for a user of the protocol or for a protocol developer."),(0,a.kt)("td",{parentName:"tr",align:null},"1ETH")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"High severity")),(0,a.kt)("td",{parentName:"tr",align:null},"Identify a vulnerability in this operation that could lead to data corruption or loss of funds."),(0,a.kt)("td",{parentName:"tr",align:null},"5+ETH")))))))}m.isMDXComponent=!0}}]);