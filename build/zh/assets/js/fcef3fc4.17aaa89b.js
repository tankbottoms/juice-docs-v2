"use strict";(self.webpackChunkjuice_docs_v_2=self.webpackChunkjuice_docs_v_2||[]).push([[81021],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,k=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(k,i(i({ref:t},c),{},{components:r})):n.createElement(k,i({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},48543:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const o={},i="JBERC20PaymentTerminal",l={unversionedId:"dev/api/contracts/or-payment-terminals/jberc20paymentterminal/README",id:"dev/api/contracts/or-payment-terminals/jberc20paymentterminal/README",title:"JBERC20PaymentTerminal",description:"Manages all inflows and outflows of an ERC20 into the protocol ecosystem.",source:"@site/docs/dev/api/contracts/or-payment-terminals/jberc20paymentterminal/README.md",sourceDirName:"dev/api/contracts/or-payment-terminals/jberc20paymentterminal",slug:"/dev/api/contracts/or-payment-terminals/jberc20paymentterminal/",permalink:"/zh/dev/api/contracts/or-payment-terminals/jberc20paymentterminal/",draft:!1,editUrl:"https://github.com/jbx-protocol/juice-docs-v2/blob/main/docs/dev/api/contracts/or-payment-terminals/jberc20paymentterminal/README.md",tags:[],version:"current",frontMatter:{},sidebar:"dev",previous:{title:"supportsInterface",permalink:"/zh/dev/api/contracts/or-payment-terminals/or-abstract/jbsingletokenpaymentterminal/read/supportsinterface"},next:{title:"_beforeTransferTo",permalink:"/zh/dev/api/contracts/or-payment-terminals/jberc20paymentterminal/write/-_beforetransferto"}},s={},p=[{value:"Code",id:"code",level:4},{value:"Addresses",id:"addresses",level:4},{value:"Interfaces",id:"interfaces",level:4},{value:"Constructor",id:"constructor",level:4},{value:"Write",id:"write",level:4}],c={toc:p};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"jberc20paymentterminal"},"JBERC20PaymentTerminal"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Manages all inflows and outflows of an ERC20 into the protocol ecosystem.")),(0,a.kt)("h4",{id:"code"},"Code"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/jbx-protocol/juice-contracts-v2/blob/main/contracts/JBERC20PaymentTerminal.sol"},"https://github.com/jbx-protocol/juice-contracts-v2/blob/main/contracts/JBERC20PaymentTerminal.sol")),(0,a.kt)("h4",{id:"addresses"},"Addresses"),(0,a.kt)("p",null,"Ethereum mainnet: ",(0,a.kt)("em",{parentName:"p"},"Not yet deployed")),(0,a.kt)("h4",{id:"interfaces"},"Interfaces"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Contract"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/zh/dev/api/interfaces/ijbpayoutredemptionpaymentterminal"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"IJBPayoutRedemptionPaymentTerminal")))),(0,a.kt)("td",{parentName:"tr",align:null},"Generic terminal managing all inflows and outflows of funds into the protocol ecosystem.")))),(0,a.kt)("h4",{id:"constructor"},"Constructor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/**\n  @param _token The token that this terminal manages.\n  @param _currency The currency that this terminal's token adheres to for price feeds.\n  @param _baseWeightCurrency The currency to base token issuance on.\n  @param _payoutSplitsGroup The group that denotes payout splits from this terminal in the splits store.\n  @param _operatorStore A contract storing operator assignments.\n  @param _projects A contract which mints ERC-721's that represent project ownership and transfers.\n  @param _directory A contract storing directories of terminals and controllers for each project.\n  @param _splitsStore A contract that stores splits for each project.\n  @param _prices A contract that exposes price feeds.\n  @param _store A contract that stores the terminal's data.\n  @param _owner The address that will own this contract.\n*/\nconstructor(\n  IERC20Metadata _token,\n  uint256 _currency,\n  uint256 _baseWeightCurrency,\n  uint256 _payoutSplitsGroup,\n  IJBOperatorStore _operatorStore,\n  IJBProjects _projects,\n  IJBDirectory _directory,\n  IJBSplitsStore _splitsStore,\n  IJBPrices _prices,\n  IJBSingleTokenPaymentTerminalStore _store,\n  address _owner\n)\n  JBPayoutRedemptionPaymentTerminal(\n    address(_token),\n    _token.decimals(),\n    _currency,\n    _baseWeightCurrency,\n    _payoutSplitsGroup,\n    _operatorStore,\n    _projects,\n    _directory,\n    _splitsStore,\n    _prices,\n    _store,\n    _owner\n  )\n{}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_token")," is the ERC20 token that this terminal manages."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_currency")," is the currency that this terminal's token adheres to for price feeds. From ",(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/libraries/jbcurrencies"},(0,a.kt)("inlineCode",{parentName:"a"},"JBCurrencies")),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_baseWeightCurrency")," is the currency to base token issuance on. From ",(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/libraries/jbcurrencies"},(0,a.kt)("inlineCode",{parentName:"a"},"JBCurrencies")),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_payoutSplitsGroup")," is the group that denotes payout splits from this terminal in the splits store. From ",(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/libraries/jbsplitsgroups"},(0,a.kt)("inlineCode",{parentName:"a"},"JBSplitGroups")),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_operatorStore")," is an ",(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/interfaces/ijboperatorstore"},(0,a.kt)("inlineCode",{parentName:"a"},"IJBOperatorStore"))," contract storing operator assignments."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_projects")," is an ",(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/interfaces/ijbprojects"},(0,a.kt)("inlineCode",{parentName:"a"},"IJBProjects"))," contract which mints ERC-721's that represent project ownership and transfers."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_directory")," is an ",(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/interfaces/ijbdirectory"},(0,a.kt)("inlineCode",{parentName:"a"},"IJBDirectory"))," contract storing directories of terminals and controllers for each project."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_splitsStore")," is an ",(0,a.kt)("a",{parentName:"li",href:"/dev/api/interfaces/ijbsplitsstore/"},(0,a.kt)("inlineCode",{parentName:"a"},"IJBSplitsStore"))," contract that stores splits for each project."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_prices")," is an ",(0,a.kt)("a",{parentName:"li",href:"/zh/dev/api/interfaces/ijbprices"},(0,a.kt)("inlineCode",{parentName:"a"},"IJBPrices"))," contract that exposes price feeds."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_store")," is a contract that stores the terminal's data."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_owner")," is the address that will own this contract.")),(0,a.kt)("h4",{id:"write"},"Write"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Function"),(0,a.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-payment-terminals/jberc20paymentterminal/write/-_transferfrom"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"_transferFrom")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("strong",null,"Traits")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"internal")))," ",(0,a.kt)("p",null,(0,a.kt)("strong",null,"Params")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"address _from")),(0,a.kt)("li",null,(0,a.kt)("code",null,"address payable _to")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _amount"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/zh/dev/api/contracts/or-payment-terminals/jberc20paymentterminal/write/-_beforetransferto"},(0,a.kt)("strong",{parentName:"a"},(0,a.kt)("inlineCode",{parentName:"strong"},"_beforeTransferTo")))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("strong",null,"Traits")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"internal")),(0,a.kt)("li",null,(0,a.kt)("code",null,"virtual")))," ",(0,a.kt)("p",null,(0,a.kt)("strong",null,"Params")),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("code",null,"address _to")),(0,a.kt)("li",null,(0,a.kt)("code",null,"uint256 _amount"))))))))}m.isMDXComponent=!0}}]);